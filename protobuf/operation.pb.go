// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/protobuf/operation.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Operation struct {
	// 例えばShutdownVirtualMachineが実行され、STOPPINGステータスになった場合ShutdownVirtualMachineRequestが格納される
	OperationRequest *any.Any `protobuf:"bytes,1,opt,name=operation_request,json=operationRequest,proto3" json:"operation_request,omitempty"`
	// locked_untilにセットされた時間まで他のoperatorがリソースを操作してはいけない
	LockedUntil *timestamp.Timestamp `protobuf:"bytes,2,opt,name=locked_until,json=lockedUntil,proto3" json:"locked_until,omitempty"`
	// is_disabled_cancel == true && !locked_until.is_expired() の間は Cancel*() ができない
	// is_disabled_cancel == true && locked_until.is_expired() の場合、operatorが死んでいる
	IsDisabledCancel bool `protobuf:"varint,3,opt,name=is_disabled_cancel,json=isDisabledCancel,proto3" json:"is_disabled_cancel,omitempty"`
	// ミスオペを防止するためのゆるくてもチェック機構が必要になるので、peerがユニークなトークンを提案し、ロックされている間はそれを検証する
	ProposingPeerToken   string           `protobuf:"bytes,4,opt,name=proposing_peer_token,json=proposingPeerToken,proto3" json:"proposing_peer_token,omitempty"`
	Logs                 []*Operation_Log `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_55dc80f08cafb003, []int{0}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetOperationRequest() *any.Any {
	if m != nil {
		return m.OperationRequest
	}
	return nil
}

func (m *Operation) GetLockedUntil() *timestamp.Timestamp {
	if m != nil {
		return m.LockedUntil
	}
	return nil
}

func (m *Operation) GetIsDisabledCancel() bool {
	if m != nil {
		return m.IsDisabledCancel
	}
	return false
}

func (m *Operation) GetProposingPeerToken() string {
	if m != nil {
		return m.ProposingPeerToken
	}
	return ""
}

func (m *Operation) GetLogs() []*Operation_Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

type Operation_Log struct {
	Ts                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Operation_Log) Reset()         { *m = Operation_Log{} }
func (m *Operation_Log) String() string { return proto.CompactTextString(m) }
func (*Operation_Log) ProtoMessage()    {}
func (*Operation_Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_55dc80f08cafb003, []int{0, 0}
}

func (m *Operation_Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation_Log.Unmarshal(m, b)
}
func (m *Operation_Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation_Log.Marshal(b, m, deterministic)
}
func (m *Operation_Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation_Log.Merge(m, src)
}
func (m *Operation_Log) XXX_Size() int {
	return xxx_messageInfo_Operation_Log.Size(m)
}
func (m *Operation_Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Operation_Log proto.InternalMessageInfo

func (m *Operation_Log) GetTs() *timestamp.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *Operation_Log) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ProposeOperationRequest struct {
	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project          string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	LockForSeconds   uint32 `protobuf:"varint,3,opt,name=lock_for_seconds,json=lockForSeconds,proto3" json:"lock_for_seconds,omitempty"`
	LogMessage       string `protobuf:"bytes,4,opt,name=log_message,json=logMessage,proto3" json:"log_message,omitempty"`
	IsDisabledCancel bool   `protobuf:"varint,5,opt,name=is_disabled_cancel,json=isDisabledCancel,proto3" json:"is_disabled_cancel,omitempty"`
	// プロセス開始時にハッシュ値などを自動生成し、それを指定すること
	ProposingPeerToken   string   `protobuf:"bytes,6,opt,name=proposing_peer_token,json=proposingPeerToken,proto3" json:"proposing_peer_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeOperationRequest) Reset()         { *m = ProposeOperationRequest{} }
func (m *ProposeOperationRequest) String() string { return proto.CompactTextString(m) }
func (*ProposeOperationRequest) ProtoMessage()    {}
func (*ProposeOperationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55dc80f08cafb003, []int{1}
}

func (m *ProposeOperationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeOperationRequest.Unmarshal(m, b)
}
func (m *ProposeOperationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeOperationRequest.Marshal(b, m, deterministic)
}
func (m *ProposeOperationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeOperationRequest.Merge(m, src)
}
func (m *ProposeOperationRequest) XXX_Size() int {
	return xxx_messageInfo_ProposeOperationRequest.Size(m)
}
func (m *ProposeOperationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeOperationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeOperationRequest proto.InternalMessageInfo

func (m *ProposeOperationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProposeOperationRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ProposeOperationRequest) GetLockForSeconds() uint32 {
	if m != nil {
		return m.LockForSeconds
	}
	return 0
}

func (m *ProposeOperationRequest) GetLogMessage() string {
	if m != nil {
		return m.LogMessage
	}
	return ""
}

func (m *ProposeOperationRequest) GetIsDisabledCancel() bool {
	if m != nil {
		return m.IsDisabledCancel
	}
	return false
}

func (m *ProposeOperationRequest) GetProposingPeerToken() string {
	if m != nil {
		return m.ProposingPeerToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Operation)(nil), "n0stack.protobuf.Operation")
	proto.RegisterType((*Operation_Log)(nil), "n0stack.protobuf.Operation.Log")
	proto.RegisterType((*ProposeOperationRequest)(nil), "n0stack.protobuf.ProposeOperationRequest")
}

func init() { proto.RegisterFile("n0stack/protobuf/operation.proto", fileDescriptor_55dc80f08cafb003) }

var fileDescriptor_55dc80f08cafb003 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x95, 0xb6, 0x1b, 0xd4, 0x05, 0x54, 0xac, 0x49, 0x84, 0x5e, 0x1a, 0xc6, 0x25, 0x42,
	0xc8, 0x9d, 0xb6, 0x23, 0xe2, 0x30, 0x40, 0x5c, 0x18, 0xda, 0x64, 0xc6, 0x85, 0x8b, 0xe5, 0x26,
	0xef, 0xac, 0x50, 0xc7, 0x6f, 0xb0, 0xdd, 0xc3, 0x3e, 0x35, 0x12, 0x9f, 0x00, 0xc5, 0x4e, 0x82,
	0x14, 0x54, 0x24, 0x6e, 0xaf, 0x9f, 0xe7, 0x79, 0xff, 0xe4, 0xa7, 0x90, 0xcc, 0x9c, 0x39, 0x2f,
	0x8b, 0xdd, 0xa6, 0xb1, 0xe8, 0x71, 0xbb, 0xbf, 0xdb, 0x60, 0x03, 0x56, 0xfa, 0x0a, 0x0d, 0x0b,
	0x12, 0x5d, 0x76, 0x09, 0xd6, 0x27, 0x56, 0xcf, 0x15, 0xa2, 0xd2, 0xf0, 0xa7, 0x45, 0x9a, 0xfb,
	0xe8, 0xae, 0xd6, 0x63, 0xcb, 0x57, 0x35, 0x38, 0x2f, 0xeb, 0x26, 0x06, 0x4e, 0x7f, 0x4e, 0xc8,
	0xfc, 0xba, 0xdf, 0x40, 0x2f, 0xc9, 0xd3, 0x61, 0x9d, 0xb0, 0xf0, 0x63, 0x0f, 0xce, 0xa7, 0x49,
	0x96, 0xe4, 0x8b, 0xf3, 0x13, 0x16, 0x47, 0x0d, 0x6b, 0xd9, 0xa5, 0xb9, 0xe7, 0xcb, 0x21, 0xce,
	0x63, 0x9a, 0xbe, 0x25, 0x8f, 0x34, 0x16, 0x3b, 0x28, 0xc5, 0xde, 0xf8, 0x4a, 0xa7, 0x93, 0xd0,
	0xbd, 0xfa, 0xab, 0xfb, 0xb6, 0x3f, 0x84, 0x2f, 0x62, 0xfe, 0x6b, 0x1b, 0xa7, 0xaf, 0x09, 0xad,
	0x9c, 0x28, 0x2b, 0x27, 0xb7, 0x1a, 0x4a, 0x51, 0x48, 0x53, 0x80, 0x4e, 0xa7, 0x59, 0x92, 0x3f,
	0xe4, 0xcb, 0xca, 0x7d, 0xe8, 0x8c, 0xf7, 0x41, 0xa7, 0x67, 0xe4, 0xa4, 0xb1, 0xd8, 0xa0, 0xab,
	0x8c, 0x12, 0x0d, 0x80, 0x15, 0x1e, 0x77, 0x60, 0xd2, 0x59, 0x96, 0xe4, 0x73, 0x4e, 0x07, 0xef,
	0x06, 0xc0, 0xde, 0xb6, 0x0e, 0xbd, 0x20, 0x33, 0x8d, 0xca, 0xa5, 0x47, 0xd9, 0x34, 0x5f, 0x9c,
	0xaf, 0xd9, 0x18, 0x26, 0x1b, 0x60, 0xb0, 0x2b, 0x54, 0x3c, 0x84, 0x57, 0x9f, 0xc8, 0xf4, 0x0a,
	0x15, 0x7d, 0x45, 0x26, 0xde, 0x75, 0x38, 0xfe, 0xf5, 0x41, 0x13, 0xef, 0x68, 0x4a, 0x1e, 0xd4,
	0xe0, 0x9c, 0x54, 0x10, 0x08, 0xcc, 0x79, 0xff, 0x3c, 0xfd, 0x95, 0x90, 0x67, 0x37, 0xe1, 0x30,
	0xb8, 0x1e, 0xc3, 0xa3, 0x64, 0x66, 0x64, 0x0d, 0x61, 0xc7, 0x9c, 0x87, 0xba, 0x9d, 0xd4, 0x58,
	0xfc, 0x0e, 0x85, 0xef, 0x27, 0x75, 0x4f, 0x9a, 0x93, 0x65, 0x8b, 0x4e, 0xdc, 0xa1, 0x15, 0x0e,
	0x0a, 0x34, 0xa5, 0x0b, 0xa4, 0x1e, 0xf3, 0x27, 0xad, 0xfe, 0x11, 0xed, 0x97, 0xa8, 0xd2, 0x35,
	0x59, 0x68, 0x54, 0xa2, 0xbf, 0x28, 0xe2, 0x21, 0x1a, 0xd5, 0xe7, 0xa8, 0x1c, 0xc0, 0x7e, 0xf4,
	0x9f, 0xd8, 0x8f, 0x0f, 0x61, 0x7f, 0xf7, 0xf2, 0xdb, 0x8b, 0x96, 0x34, 0x93, 0xc5, 0x66, 0xfc,
	0x83, 0xbf, 0xe9, 0x8b, 0xed, 0x71, 0xa8, 0x2e, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x29, 0x7a,
	0xec, 0xdb, 0x04, 0x03, 0x00, 0x00,
}
