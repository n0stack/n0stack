syntax = "proto3";

option go_package = "github.com/n0stack/n0core/provisioning/node/kvm";

package n0stack.n0core.kvm;

import "google/protobuf/empty.proto";

service KVMService {
  rpc ApplyKVM(ApplyKVMRequest) returns (KVM) {}

  rpc DeleteKVM(DeleteKVMRequest) returns (google.protobuf.Empty) {}

  // VM actions
  rpc Boot(ActionKVMRequest)         returns (KVM) {}
  rpc Reboot(ActionKVMRequest)       returns (KVM) {}
  rpc HardReboot(ActionKVMRequest)   returns (KVM) {}
  rpc Shutdown(ActionKVMRequest)     returns (KVM) {}
  rpc HardShutdown(ActionKVMRequest) returns (KVM) {}
  rpc Save(ActionKVMRequest)         returns (KVM) {}
}

message KVM {
  string uuid = 1;
  string name = 2;

  // CPU
  uint32 cpu_cores = 3;
  
  // Memory
  uint64 memory_bytes = 4;
  
  // Storage
  // definition(label, url)
  message Storage {
    string url = 1;
  }
  map<string, Storage> volumes = 5;
  
  // Network
  // definition(tap_name, hwaddr)
  message NIC {
    string tap_name = 1;
    string hw_addr = 2;
  }
  map<string, NIC> nics = 6;

  enum RunLevel {
    SHUTDOWN = 0;
    RUNNING = 1;
    PAUSED = 2;
  }
  RunLevel run_level = 7;
  
  // TCP port of websocket vnc which is opened by qemu
  int32 vnc_port = 8;
}

message ApplyKVMRequest {
  KVM kvm = 1;
}

message DeleteKVMRequest {
  string name = 1;
}

message ActionKVMRequest {
  string name = 1;
}