// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/infra/v1alpha/network.proto

package pinfra

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	protobuf "n0st.ac/n0stack/protobuf"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Network_NetworkState int32

const (
	// falied state because failed some process on API.
	Network_NETWORK_UNSPECIFIED Network_NetworkState = 0
	// steady state
	Network_AVAILABLE Network_NetworkState = 1
	// standard unsteady state
	Network_CREATING                    Network_NetworkState = 16
	Network_DELETING                    Network_NetworkState = 17
	Network_RESERVING_NETWORK_INTERFACE Network_NetworkState = 32
	Network_RELEASING_NETWORK_INTERFACE Network_NetworkState = 33
)

var Network_NetworkState_name = map[int32]string{
	0:  "NETWORK_UNSPECIFIED",
	1:  "AVAILABLE",
	16: "CREATING",
	17: "DELETING",
	32: "RESERVING_NETWORK_INTERFACE",
	33: "RELEASING_NETWORK_INTERFACE",
}

var Network_NetworkState_value = map[string]int32{
	"NETWORK_UNSPECIFIED":         0,
	"AVAILABLE":                   1,
	"CREATING":                    16,
	"DELETING":                    17,
	"RESERVING_NETWORK_INTERFACE": 32,
	"RELEASING_NETWORK_INTERFACE": 33,
}

func (x Network_NetworkState) String() string {
	return proto.EnumName(Network_NetworkState_name, int32(x))
}

func (Network_NetworkState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{1, 0}
}

type NetworkInterface struct {
	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Network の中でユニークであること
	HardwareAddress string `protobuf:"bytes,32,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	// Network の CIDR に含まれていること
	Ipv4Address          string   `protobuf:"bytes,33,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,34,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInterface) Reset()         { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()    {}
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{0}
}

func (m *NetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterface.Unmarshal(m, b)
}
func (m *NetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterface.Marshal(b, m, deterministic)
}
func (m *NetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterface.Merge(m, src)
}
func (m *NetworkInterface) XXX_Size() int {
	return xxx_messageInfo_NetworkInterface.Size(m)
}
func (m *NetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterface proto.InternalMessageInfo

func (m *NetworkInterface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkInterface) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *NetworkInterface) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NetworkInterface) GetHardwareAddress() string {
	if m != nil {
		return m.HardwareAddress
	}
	return ""
}

func (m *NetworkInterface) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *NetworkInterface) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type Network struct {
	// Name is a unique field.
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// The annotations parameter can store metadata used by the n0stack system.
	// The n0stack operations may modify this defined by the user without any notice.
	// In particular, this targets domain specific parameters, which cannot be used by many users.
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels stores user-defined metadata.
	// The n0stack system must not rewrite this value.
	Labels               map[string]string    `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State                Network_NetworkState `protobuf:"varint,5,opt,name=state,proto3,enum=n0stack.infra.v1alpha.Network_NetworkState" json:"state,omitempty"`
	Ipv4Cidr             string               `protobuf:"bytes,32,opt,name=ipv4_cidr,json=ipv4Cidr,proto3" json:"ipv4_cidr,omitempty"`
	Ipv6Cidr             string               `protobuf:"bytes,33,opt,name=ipv6_cidr,json=ipv6Cidr,proto3" json:"ipv6_cidr,omitempty"`
	NetworkInterfaces    []*NetworkInterface  `protobuf:"bytes,34,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{1}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Network) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Network) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Network) GetState() Network_NetworkState {
	if m != nil {
		return m.State
	}
	return Network_NETWORK_UNSPECIFIED
}

func (m *Network) GetIpv4Cidr() string {
	if m != nil {
		return m.Ipv4Cidr
	}
	return ""
}

func (m *Network) GetIpv6Cidr() string {
	if m != nil {
		return m.Ipv6Cidr
	}
	return ""
}

func (m *Network) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

type CreateNetworkRequest struct {
	Network              *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNetworkRequest) Reset()         { *m = CreateNetworkRequest{} }
func (m *CreateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkRequest) ProtoMessage()    {}
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{2}
}

func (m *CreateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkRequest.Unmarshal(m, b)
}
func (m *CreateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *CreateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkRequest.Merge(m, src)
}
func (m *CreateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkRequest.Size(m)
}
func (m *CreateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkRequest proto.InternalMessageInfo

func (m *CreateNetworkRequest) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type ListNetworksRequest struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworksRequest) Reset()         { *m = ListNetworksRequest{} }
func (m *ListNetworksRequest) String() string { return proto.CompactTextString(m) }
func (*ListNetworksRequest) ProtoMessage()    {}
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{3}
}

func (m *ListNetworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksRequest.Unmarshal(m, b)
}
func (m *ListNetworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksRequest.Marshal(b, m, deterministic)
}
func (m *ListNetworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksRequest.Merge(m, src)
}
func (m *ListNetworksRequest) XXX_Size() int {
	return xxx_messageInfo_ListNetworksRequest.Size(m)
}
func (m *ListNetworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksRequest proto.InternalMessageInfo

func (m *ListNetworksRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type ListNetworksResponse struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListNetworksResponse) Reset()         { *m = ListNetworksResponse{} }
func (m *ListNetworksResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworksResponse) ProtoMessage()    {}
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{4}
}

func (m *ListNetworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksResponse.Unmarshal(m, b)
}
func (m *ListNetworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksResponse.Marshal(b, m, deterministic)
}
func (m *ListNetworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksResponse.Merge(m, src)
}
func (m *ListNetworksResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworksResponse.Size(m)
}
func (m *ListNetworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksResponse proto.InternalMessageInfo

func (m *ListNetworksResponse) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type GetNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkRequest) Reset()         { *m = GetNetworkRequest{} }
func (m *GetNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkRequest) ProtoMessage()    {}
func (*GetNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{5}
}

func (m *GetNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkRequest.Unmarshal(m, b)
}
func (m *GetNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkRequest.Merge(m, src)
}
func (m *GetNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkRequest.Size(m)
}
func (m *GetNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkRequest proto.InternalMessageInfo

func (m *GetNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNetworkRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type UpdateNetworkRequest struct {
	Network              *Network              `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateNetworkRequest) Reset()         { *m = UpdateNetworkRequest{} }
func (m *UpdateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNetworkRequest) ProtoMessage()    {}
func (*UpdateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{6}
}

func (m *UpdateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetworkRequest.Unmarshal(m, b)
}
func (m *UpdateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetworkRequest.Merge(m, src)
}
func (m *UpdateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNetworkRequest.Size(m)
}
func (m *UpdateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetworkRequest proto.InternalMessageInfo

func (m *UpdateNetworkRequest) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *UpdateNetworkRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkRequest) Reset()         { *m = DeleteNetworkRequest{} }
func (m *DeleteNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkRequest) ProtoMessage()    {}
func (*DeleteNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{7}
}

func (m *DeleteNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkRequest.Unmarshal(m, b)
}
func (m *DeleteNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkRequest.Merge(m, src)
}
func (m *DeleteNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkRequest.Size(m)
}
func (m *DeleteNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkRequest proto.InternalMessageInfo

func (m *DeleteNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteNetworkRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type CancelNetworkOperationRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelNetworkOperationRequest) Reset()         { *m = CancelNetworkOperationRequest{} }
func (m *CancelNetworkOperationRequest) String() string { return proto.CompactTextString(m) }
func (*CancelNetworkOperationRequest) ProtoMessage()    {}
func (*CancelNetworkOperationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{8}
}

func (m *CancelNetworkOperationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelNetworkOperationRequest.Unmarshal(m, b)
}
func (m *CancelNetworkOperationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelNetworkOperationRequest.Marshal(b, m, deterministic)
}
func (m *CancelNetworkOperationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelNetworkOperationRequest.Merge(m, src)
}
func (m *CancelNetworkOperationRequest) XXX_Size() int {
	return xxx_messageInfo_CancelNetworkOperationRequest.Size(m)
}
func (m *CancelNetworkOperationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelNetworkOperationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelNetworkOperationRequest proto.InternalMessageInfo

func (m *CancelNetworkOperationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CancelNetworkOperationRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type ReserveNetworkInterfaceRequest struct {
	NetworkName          string            `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Project              string            `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	NetworkInterface     *NetworkInterface `protobuf:"bytes,3,opt,name=network_interface,json=networkInterface,proto3" json:"network_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReserveNetworkInterfaceRequest) Reset()         { *m = ReserveNetworkInterfaceRequest{} }
func (m *ReserveNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveNetworkInterfaceRequest) ProtoMessage()    {}
func (*ReserveNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{9}
}

func (m *ReserveNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *ReserveNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *ReserveNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveNetworkInterfaceRequest.Merge(m, src)
}
func (m *ReserveNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveNetworkInterfaceRequest.Size(m)
}
func (m *ReserveNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveNetworkInterfaceRequest proto.InternalMessageInfo

func (m *ReserveNetworkInterfaceRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *ReserveNetworkInterfaceRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ReserveNetworkInterfaceRequest) GetNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.NetworkInterface
	}
	return nil
}

type ReleaseNetworkInterfaceRequest struct {
	NetworkName          string   `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	NetworkInterfaceName string   `protobuf:"bytes,3,opt,name=network_interface_name,json=networkInterfaceName,proto3" json:"network_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseNetworkInterfaceRequest) Reset()         { *m = ReleaseNetworkInterfaceRequest{} }
func (m *ReleaseNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseNetworkInterfaceRequest) ProtoMessage()    {}
func (*ReleaseNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd0d67130f56aed1, []int{10}
}

func (m *ReleaseNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *ReleaseNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseNetworkInterfaceRequest.Merge(m, src)
}
func (m *ReleaseNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseNetworkInterfaceRequest.Size(m)
}
func (m *ReleaseNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseNetworkInterfaceRequest proto.InternalMessageInfo

func (m *ReleaseNetworkInterfaceRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *ReleaseNetworkInterfaceRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ReleaseNetworkInterfaceRequest) GetNetworkInterfaceName() string {
	if m != nil {
		return m.NetworkInterfaceName
	}
	return ""
}

func init() {
	proto.RegisterEnum("n0stack.infra.v1alpha.Network_NetworkState", Network_NetworkState_name, Network_NetworkState_value)
	proto.RegisterType((*NetworkInterface)(nil), "n0stack.infra.v1alpha.NetworkInterface")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.NetworkInterface.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.NetworkInterface.LabelsEntry")
	proto.RegisterType((*Network)(nil), "n0stack.infra.v1alpha.Network")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.Network.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.Network.LabelsEntry")
	proto.RegisterType((*CreateNetworkRequest)(nil), "n0stack.infra.v1alpha.CreateNetworkRequest")
	proto.RegisterType((*ListNetworksRequest)(nil), "n0stack.infra.v1alpha.ListNetworksRequest")
	proto.RegisterType((*ListNetworksResponse)(nil), "n0stack.infra.v1alpha.ListNetworksResponse")
	proto.RegisterType((*GetNetworkRequest)(nil), "n0stack.infra.v1alpha.GetNetworkRequest")
	proto.RegisterType((*UpdateNetworkRequest)(nil), "n0stack.infra.v1alpha.UpdateNetworkRequest")
	proto.RegisterType((*DeleteNetworkRequest)(nil), "n0stack.infra.v1alpha.DeleteNetworkRequest")
	proto.RegisterType((*CancelNetworkOperationRequest)(nil), "n0stack.infra.v1alpha.CancelNetworkOperationRequest")
	proto.RegisterType((*ReserveNetworkInterfaceRequest)(nil), "n0stack.infra.v1alpha.ReserveNetworkInterfaceRequest")
	proto.RegisterType((*ReleaseNetworkInterfaceRequest)(nil), "n0stack.infra.v1alpha.ReleaseNetworkInterfaceRequest")
}

func init() {
	proto.RegisterFile("n0stack/infra/v1alpha/network.proto", fileDescriptor_fd0d67130f56aed1)
}

var fileDescriptor_fd0d67130f56aed1 = []byte{
	// 1116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x4d, 0x73, 0xdb, 0x44,
	0x18, 0xae, 0xe2, 0xa6, 0x4d, 0x5e, 0x27, 0x45, 0xd9, 0x9a, 0xc4, 0xe3, 0x40, 0x71, 0x04, 0x33,
	0xa4, 0x29, 0x91, 0x8a, 0x9b, 0x9a, 0xe0, 0x02, 0x33, 0x8a, 0xa3, 0x64, 0x3c, 0x75, 0xdd, 0xa0,
	0xa4, 0x61, 0xa6, 0x97, 0xcc, 0x46, 0xde, 0x38, 0x6a, 0x14, 0x49, 0x68, 0x65, 0x67, 0x32, 0x9d,
	0x5e, 0x38, 0x32, 0xc3, 0x85, 0xc0, 0x99, 0x13, 0xbf, 0x00, 0x18, 0x0e, 0xfc, 0x02, 0xce, 0xfc,
	0x05, 0x7e, 0x08, 0xa3, 0xd5, 0x4a, 0xfe, 0x92, 0xbf, 0x32, 0x30, 0x9c, 0xac, 0xdd, 0x7d, 0xf6,
	0xd9, 0x67, 0xdf, 0x77, 0xdf, 0x67, 0xd7, 0xf0, 0xbe, 0xfd, 0x90, 0xfa, 0xd8, 0x38, 0x53, 0x4c,
	0xfb, 0xc4, 0xc3, 0x4a, 0xeb, 0x63, 0x6c, 0xb9, 0xa7, 0x58, 0xb1, 0x89, 0x7f, 0xe1, 0x78, 0x67,
	0xb2, 0xeb, 0x39, 0xbe, 0x83, 0xde, 0xe6, 0x20, 0x99, 0x81, 0x64, 0x0e, 0xca, 0xbd, 0xd3, 0x70,
	0x9c, 0x86, 0x45, 0x14, 0xec, 0x9a, 0x0a, 0xb6, 0x6d, 0xc7, 0xc7, 0xbe, 0xe9, 0xd8, 0x34, 0x9c,
	0x94, 0x5b, 0xe6, 0xa3, 0xac, 0x75, 0xdc, 0x3c, 0x51, 0xc8, 0xb9, 0xeb, 0x5f, 0xf2, 0xc1, 0x7c,
	0xef, 0xe0, 0x89, 0x49, 0xac, 0xfa, 0xd1, 0x39, 0xa6, 0x7c, 0xcd, 0xdc, 0x47, 0xec, 0xc7, 0x58,
	0x6f, 0x10, 0x7b, 0x9d, 0x5e, 0xe0, 0x46, 0x83, 0x78, 0x8a, 0xe3, 0xb2, 0x05, 0x12, 0x16, 0xcb,
	0x47, 0xdb, 0x88, 0x09, 0x1d, 0x97, 0x78, 0x0c, 0x12, 0x22, 0xa4, 0x3f, 0x52, 0x20, 0xd6, 0xc2,
	0x5d, 0x55, 0x6c, 0x9f, 0x78, 0x27, 0xd8, 0x20, 0x08, 0xc1, 0x4d, 0x1b, 0x9f, 0x93, 0xac, 0x90,
	0x17, 0x56, 0x67, 0x75, 0xf6, 0x8d, 0x5e, 0x42, 0xba, 0x83, 0x3f, 0x9b, 0xca, 0xa7, 0x56, 0xd3,
	0x85, 0x4d, 0x39, 0x31, 0x04, 0x72, 0x2f, 0xa3, 0xac, 0xb6, 0xa7, 0x6a, 0xb6, 0xef, 0x5d, 0xea,
	0x9d, 0x64, 0xe8, 0x29, 0xdc, 0xb2, 0xf0, 0x31, 0xb1, 0x68, 0xf6, 0x26, 0xa3, 0x7d, 0x34, 0x2e,
	0x6d, 0x95, 0xcd, 0x0a, 0x19, 0x39, 0x05, 0xba, 0x0f, 0xe2, 0x29, 0xf6, 0xea, 0x17, 0xd8, 0x23,
	0x47, 0xb8, 0x5e, 0xf7, 0x08, 0xa5, 0xd9, 0x3c, 0xdb, 0xc8, 0x5b, 0x51, 0xbf, 0x1a, 0x76, 0xa3,
	0x15, 0x98, 0x33, 0xdd, 0xd6, 0x46, 0x0c, 0x5b, 0x61, 0xb0, 0x74, 0xd0, 0xd7, 0x0d, 0x29, 0xc6,
	0x10, 0x29, 0x86, 0x14, 0x39, 0x24, 0xf7, 0x05, 0x88, 0xbd, 0xdb, 0x43, 0x22, 0xa4, 0xce, 0xc8,
	0x25, 0x0f, 0x60, 0xf0, 0x89, 0x32, 0x30, 0xdd, 0xc2, 0x56, 0x93, 0x64, 0xa7, 0x58, 0x5f, 0xd8,
	0x28, 0x4d, 0x6d, 0x0a, 0xb9, 0x4f, 0x21, 0xdd, 0xb1, 0x8f, 0x49, 0xa6, 0x4a, 0xbf, 0x4d, 0xc3,
	0x6d, 0x1e, 0x94, 0xc4, 0xa4, 0x65, 0xe1, 0xb6, 0xeb, 0x39, 0xaf, 0x88, 0xe1, 0xf3, 0xb9, 0x51,
	0x13, 0x7d, 0x99, 0x94, 0x4e, 0x65, 0x78, 0xdc, 0x47, 0x64, 0x71, 0xab, 0x27, 0x8b, 0x6b, 0x23,
	0xd8, 0x92, 0x92, 0xa7, 0xc2, 0x34, 0xf5, 0xb1, 0x4f, 0xb2, 0xd3, 0x79, 0x61, 0xf5, 0x4e, 0xe1,
	0xc1, 0x08, 0x0a, 0xfe, 0xbb, 0x1f, 0x4c, 0xd1, 0xc3, 0x99, 0x68, 0x19, 0x66, 0x59, 0x52, 0x0d,
	0xb3, 0xee, 0xf1, 0xc4, 0xcf, 0x04, 0x1d, 0x65, 0xb3, 0xee, 0xf1, 0xc1, 0x62, 0x38, 0xb8, 0x12,
	0x0f, 0x16, 0xd9, 0xe0, 0x21, 0x20, 0x5e, 0xe0, 0x47, 0x66, 0x74, 0xc4, 0x82, 0x8c, 0x07, 0x9b,
	0xf9, 0x70, 0xcc, 0x23, 0xa9, 0x2f, 0xd8, 0x3d, 0x3d, 0xff, 0xeb, 0x01, 0xf9, 0x41, 0x80, 0xb9,
	0xce, 0x20, 0xa1, 0x25, 0xb8, 0x5b, 0xd3, 0x0e, 0xbe, 0x7a, 0xae, 0x3f, 0x3d, 0x7a, 0x51, 0xdb,
	0xdf, 0xd3, 0xca, 0x95, 0x9d, 0x8a, 0xb6, 0x2d, 0xde, 0x40, 0xf3, 0x30, 0xab, 0x1e, 0xaa, 0x95,
	0xaa, 0xba, 0x55, 0xd5, 0x44, 0x01, 0xcd, 0xc1, 0x4c, 0x59, 0xd7, 0xd4, 0x83, 0x4a, 0x6d, 0x57,
	0x14, 0x83, 0xd6, 0xb6, 0x56, 0xd5, 0x58, 0x6b, 0x01, 0xbd, 0x07, 0xcb, 0xba, 0xb6, 0xaf, 0xe9,
	0x87, 0x95, 0xda, 0xee, 0x51, 0xc4, 0x56, 0xa9, 0x1d, 0x68, 0xfa, 0x8e, 0x5a, 0xd6, 0xc4, 0x7c,
	0x08, 0xa8, 0x6a, 0xea, 0x7e, 0x32, 0x60, 0x45, 0xda, 0x83, 0x4c, 0xd9, 0x23, 0xd8, 0x27, 0x5c,
	0x9b, 0x4e, 0xbe, 0x6e, 0x12, 0xea, 0xa3, 0x4d, 0xb8, 0xcd, 0xc3, 0xc7, 0xb6, 0x97, 0x2e, 0xdc,
	0x1b, 0x1e, 0x76, 0x3d, 0x82, 0x4b, 0x0a, 0xdc, 0xad, 0x9a, 0xd4, 0xe7, 0xfd, 0x34, 0x22, 0xec,
	0x28, 0x00, 0xa1, 0xab, 0x00, 0x24, 0x1d, 0x32, 0xdd, 0x13, 0xa8, 0xeb, 0xd8, 0x94, 0xa0, 0x12,
	0xcc, 0x70, 0x4e, 0x9a, 0x15, 0x58, 0xea, 0x47, 0x69, 0x88, 0xf1, 0x92, 0x0a, 0x0b, 0xbb, 0xc4,
	0xef, 0xd9, 0xd3, 0x44, 0x75, 0x29, 0x7d, 0x27, 0x40, 0xe6, 0x85, 0x5b, 0xff, 0x17, 0x43, 0x83,
	0x9e, 0x40, 0xba, 0xc9, 0x18, 0xd9, 0x3d, 0xc2, 0x16, 0x4c, 0x17, 0x72, 0x72, 0x78, 0xd5, 0xc8,
	0xd1, 0xcd, 0x20, 0xef, 0x04, 0x57, 0xcd, 0x33, 0x4c, 0xcf, 0x74, 0x08, 0xe1, 0xc1, 0xb7, 0xb4,
	0x0d, 0x99, 0x6d, 0x62, 0x91, 0x3e, 0x39, 0x93, 0xed, 0xea, 0x19, 0xbc, 0x5b, 0xc6, 0xb6, 0x41,
	0x2c, 0xce, 0xf2, 0x3c, 0xba, 0x85, 0xae, 0x47, 0xf7, 0x8b, 0x00, 0xf7, 0x74, 0x42, 0x89, 0xd7,
	0x22, 0x7d, 0xf5, 0xc7, 0x09, 0x57, 0x60, 0x2e, 0xaa, 0xe5, 0x0e, 0xe2, 0x34, 0xef, 0xab, 0x0d,
	0x37, 0xc7, 0x03, 0x58, 0xe8, 0x33, 0x82, 0x6c, 0x8a, 0xc5, 0x6d, 0x6c, 0x1f, 0x10, 0x7b, 0x7d,
	0x40, 0xba, 0x62, 0xaa, 0x2d, 0x82, 0xe9, 0x7f, 0xa3, 0x7a, 0x03, 0x16, 0xfb, 0x54, 0x87, 0x34,
	0x29, 0x06, 0xcc, 0xf4, 0x2a, 0x0a, 0xf8, 0x0a, 0x7f, 0x02, 0xdc, 0x89, 0x1c, 0x82, 0x78, 0x2d,
	0xd3, 0x20, 0xe8, 0x67, 0x01, 0xe6, 0xbb, 0xca, 0x13, 0x0d, 0xf2, 0xe1, 0xa4, 0x22, 0xce, 0x8d,
	0x38, 0x98, 0xd2, 0xee, 0x37, 0x7f, 0xfd, 0x7d, 0x35, 0xa5, 0x4a, 0x45, 0xf6, 0x42, 0xea, 0x7e,
	0x60, 0xf1, 0xbd, 0x50, 0xe5, 0x75, 0xc7, 0x53, 0x2b, 0xe8, 0x79, 0x13, 0xbd, 0xbd, 0x68, 0x29,
	0x3e, 0xd8, 0x3f, 0x09, 0x30, 0xd7, 0x59, 0xc3, 0x68, 0xd0, 0x8d, 0x93, 0xe0, 0x0c, 0xb9, 0x07,
	0x63, 0x61, 0x43, 0x53, 0x90, 0x8a, 0x4c, 0xf2, 0x43, 0x24, 0x0f, 0x95, 0xdc, 0x27, 0x15, 0xfd,
	0x28, 0x00, 0xb4, 0x1d, 0x01, 0xad, 0x0e, 0x58, 0xb3, 0xcf, 0x34, 0x46, 0xc6, 0xf0, 0x73, 0x26,
	0xe8, 0x13, 0xf4, 0x78, 0x32, 0x41, 0xca, 0xeb, 0xe0, 0x3c, 0xbc, 0x41, 0xbf, 0x0a, 0x30, 0xdf,
	0xe5, 0x32, 0x03, 0x33, 0x9c, 0xe4, 0x45, 0x23, 0xd5, 0x1d, 0x32, 0x75, 0x7b, 0x05, 0xed, 0x7a,
	0x19, 0x6e, 0x0f, 0x31, 0xb5, 0xed, 0x84, 0x5f, 0x09, 0x30, 0xdf, 0xe5, 0x46, 0x03, 0x65, 0x27,
	0x79, 0x56, 0x6e, 0xb1, 0xcf, 0xf3, 0xb4, 0xe0, 0xed, 0x1d, 0x05, 0x73, 0xed, 0x9a, 0xc1, 0xfc,
	0x5d, 0x80, 0xc5, 0x64, 0x77, 0x43, 0x1b, 0x83, 0xea, 0x66, 0x98, 0x19, 0x8e, 0x5d, 0x40, 0x9f,
	0x5d, 0x4b, 0x6f, 0xc9, 0x60, 0x8b, 0x97, 0x84, 0x35, 0x74, 0x02, 0x4b, 0x7b, 0x9e, 0xe3, 0x3a,
	0xb1, 0x21, 0xb5, 0x95, 0xdf, 0x8f, 0x35, 0xc4, 0xc1, 0xe2, 0xd0, 0x89, 0xe5, 0xde, 0x40, 0x1e,
	0x2c, 0x0d, 0xb0, 0x6b, 0xf4, 0x78, 0xc0, 0xe4, 0xe1, 0xf6, 0x3e, 0xee, 0x9a, 0x89, 0x66, 0x3b,
	0x64, 0xcd, 0x61, 0xe6, 0x3c, 0x7a, 0xcd, 0xad, 0x6f, 0x85, 0xef, 0x55, 0xcc, 0x6e, 0xea, 0x10,
	0x28, 0xad, 0xc7, 0x9f, 0x48, 0x3a, 0xf5, 0x7d, 0x97, 0x96, 0x14, 0xa5, 0x61, 0xfa, 0xa7, 0xcd,
	0x63, 0xd9, 0x70, 0xce, 0x95, 0xe8, 0xdf, 0x19, 0xff, 0x5d, 0x13, 0xa6, 0x0a, 0x22, 0x76, 0x5d,
	0xcb, 0x34, 0x58, 0x80, 0x95, 0x57, 0xd4, 0xb1, 0x4b, 0x7d, 0x3d, 0x2f, 0x3f, 0x08, 0xf0, 0x32,
	0x36, 0x94, 0xc4, 0x3f, 0xa9, 0x4f, 0x5c, 0xd6, 0x3c, 0xbe, 0xc5, 0x12, 0xf7, 0xe8, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xa8, 0x39, 0x61, 0x74, 0xcb, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetworkServiceClient is the client API for NetworkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceClient interface {
	CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*Network, error)
	ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error)
	GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*Network, error)
	UpdateNetwork(ctx context.Context, in *UpdateNetworkRequest, opts ...grpc.CallOption) (*Network, error)
	DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CancelNetworkOperation(ctx context.Context, in *CancelNetworkOperationRequest, opts ...grpc.CallOption) (*Network, error)
	ProposeNetworkOperation(ctx context.Context, in *protobuf.ProposeOperationRequest, opts ...grpc.CallOption) (*Network, error)
	ReserveNetworkInterface(ctx context.Context, in *ReserveNetworkInterfaceRequest, opts ...grpc.CallOption) (*Network, error)
	ReleaseNetworkInterface(ctx context.Context, in *ReleaseNetworkInterfaceRequest, opts ...grpc.CallOption) (*Network, error)
}

type networkServiceClient struct {
	cc *grpc.ClientConn
}

func NewNetworkServiceClient(cc *grpc.ClientConn) NetworkServiceClient {
	return &networkServiceClient{cc}
}

func (c *networkServiceClient) CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/CreateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error) {
	out := new(ListNetworksResponse)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/GetNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) UpdateNetwork(ctx context.Context, in *UpdateNetworkRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/UpdateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/DeleteNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) CancelNetworkOperation(ctx context.Context, in *CancelNetworkOperationRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/CancelNetworkOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) ProposeNetworkOperation(ctx context.Context, in *protobuf.ProposeOperationRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/ProposeNetworkOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) ReserveNetworkInterface(ctx context.Context, in *ReserveNetworkInterfaceRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/ReserveNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) ReleaseNetworkInterface(ctx context.Context, in *ReleaseNetworkInterfaceRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.NetworkService/ReleaseNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceServer is the server API for NetworkService service.
type NetworkServiceServer interface {
	CreateNetwork(context.Context, *CreateNetworkRequest) (*Network, error)
	ListNetworks(context.Context, *ListNetworksRequest) (*ListNetworksResponse, error)
	GetNetwork(context.Context, *GetNetworkRequest) (*Network, error)
	UpdateNetwork(context.Context, *UpdateNetworkRequest) (*Network, error)
	DeleteNetwork(context.Context, *DeleteNetworkRequest) (*empty.Empty, error)
	CancelNetworkOperation(context.Context, *CancelNetworkOperationRequest) (*Network, error)
	ProposeNetworkOperation(context.Context, *protobuf.ProposeOperationRequest) (*Network, error)
	ReserveNetworkInterface(context.Context, *ReserveNetworkInterfaceRequest) (*Network, error)
	ReleaseNetworkInterface(context.Context, *ReleaseNetworkInterfaceRequest) (*Network, error)
}

// UnimplementedNetworkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServiceServer struct {
}

func (*UnimplementedNetworkServiceServer) CreateNetwork(ctx context.Context, req *CreateNetworkRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetwork not implemented")
}
func (*UnimplementedNetworkServiceServer) ListNetworks(ctx context.Context, req *ListNetworksRequest) (*ListNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworks not implemented")
}
func (*UnimplementedNetworkServiceServer) GetNetwork(ctx context.Context, req *GetNetworkRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetwork not implemented")
}
func (*UnimplementedNetworkServiceServer) UpdateNetwork(ctx context.Context, req *UpdateNetworkRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNetwork not implemented")
}
func (*UnimplementedNetworkServiceServer) DeleteNetwork(ctx context.Context, req *DeleteNetworkRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetwork not implemented")
}
func (*UnimplementedNetworkServiceServer) CancelNetworkOperation(ctx context.Context, req *CancelNetworkOperationRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelNetworkOperation not implemented")
}
func (*UnimplementedNetworkServiceServer) ProposeNetworkOperation(ctx context.Context, req *protobuf.ProposeOperationRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeNetworkOperation not implemented")
}
func (*UnimplementedNetworkServiceServer) ReserveNetworkInterface(ctx context.Context, req *ReserveNetworkInterfaceRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReserveNetworkInterface not implemented")
}
func (*UnimplementedNetworkServiceServer) ReleaseNetworkInterface(ctx context.Context, req *ReleaseNetworkInterfaceRequest) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseNetworkInterface not implemented")
}

func RegisterNetworkServiceServer(s *grpc.Server, srv NetworkServiceServer) {
	s.RegisterService(&_NetworkService_serviceDesc, srv)
}

func _NetworkService_CreateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).CreateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/CreateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).CreateNetwork(ctx, req.(*CreateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ListNetworks(ctx, req.(*ListNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_GetNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).GetNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/GetNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).GetNetwork(ctx, req.(*GetNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_UpdateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).UpdateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/UpdateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).UpdateNetwork(ctx, req.(*UpdateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_DeleteNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).DeleteNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/DeleteNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).DeleteNetwork(ctx, req.(*DeleteNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_CancelNetworkOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelNetworkOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).CancelNetworkOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/CancelNetworkOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).CancelNetworkOperation(ctx, req.(*CancelNetworkOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_ProposeNetworkOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protobuf.ProposeOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ProposeNetworkOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/ProposeNetworkOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ProposeNetworkOperation(ctx, req.(*protobuf.ProposeOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_ReserveNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ReserveNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/ReserveNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ReserveNetworkInterface(ctx, req.(*ReserveNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_ReleaseNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ReleaseNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.NetworkService/ReleaseNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ReleaseNetworkInterface(ctx, req.(*ReleaseNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.infra.v1alpha.NetworkService",
	HandlerType: (*NetworkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNetwork",
			Handler:    _NetworkService_CreateNetwork_Handler,
		},
		{
			MethodName: "ListNetworks",
			Handler:    _NetworkService_ListNetworks_Handler,
		},
		{
			MethodName: "GetNetwork",
			Handler:    _NetworkService_GetNetwork_Handler,
		},
		{
			MethodName: "UpdateNetwork",
			Handler:    _NetworkService_UpdateNetwork_Handler,
		},
		{
			MethodName: "DeleteNetwork",
			Handler:    _NetworkService_DeleteNetwork_Handler,
		},
		{
			MethodName: "CancelNetworkOperation",
			Handler:    _NetworkService_CancelNetworkOperation_Handler,
		},
		{
			MethodName: "ProposeNetworkOperation",
			Handler:    _NetworkService_ProposeNetworkOperation_Handler,
		},
		{
			MethodName: "ReserveNetworkInterface",
			Handler:    _NetworkService_ReserveNetworkInterface_Handler,
		},
		{
			MethodName: "ReleaseNetworkInterface",
			Handler:    _NetworkService_ReleaseNetworkInterface_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "n0stack/infra/v1alpha/network.proto",
}
