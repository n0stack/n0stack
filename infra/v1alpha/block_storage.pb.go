// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/infra/v1alpha/block_storage.proto

package pinfra

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	protobuf "n0st.ac/n0stack/protobuf"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockStorage_BlockStorageState int32

const (
	BlockStorage_BLOCK_STORAGE_UNSPECIFIED BlockStorage_BlockStorageState = 0
	BlockStorage_AVAILABLE                 BlockStorage_BlockStorageState = 1
	BlockStorage_DELETED                   BlockStorage_BlockStorageState = 2
	// standard unsteady state
	BlockStorage_CREATING  BlockStorage_BlockStorageState = 16
	BlockStorage_DELETING  BlockStorage_BlockStorageState = 17
	BlockStorage_FETCHING  BlockStorage_BlockStorageState = 32
	BlockStorage_CLONING   BlockStorage_BlockStorageState = 33
	BlockStorage_UPLOADING BlockStorage_BlockStorageState = 34
)

var BlockStorage_BlockStorageState_name = map[int32]string{
	0:  "BLOCK_STORAGE_UNSPECIFIED",
	1:  "AVAILABLE",
	2:  "DELETED",
	16: "CREATING",
	17: "DELETING",
	32: "FETCHING",
	33: "CLONING",
	34: "UPLOADING",
}

var BlockStorage_BlockStorageState_value = map[string]int32{
	"BLOCK_STORAGE_UNSPECIFIED": 0,
	"AVAILABLE":                 1,
	"DELETED":                   2,
	"CREATING":                  16,
	"DELETING":                  17,
	"FETCHING":                  32,
	"CLONING":                   33,
	"UPLOADING":                 34,
}

func (x BlockStorage_BlockStorageState) String() string {
	return proto.EnumName(BlockStorage_BlockStorageState_name, int32(x))
}

func (BlockStorage_BlockStorageState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{0, 0}
}

type BlockStorage struct {
	// Name is a unique field.
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Annotations can store metadata used by the system for control.
	// In particular, implementation-dependent fields that can not be set as protobuf fields are targeted.
	// The control specified by n0stack may delete metadata specified by the user.
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels stores user-defined metadata.
	// The n0stack system must not rewrite this value.
	Labels               map[string]string              `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operation            *protobuf.Operation            `protobuf:"bytes,6,opt,name=operation,proto3" json:"operation,omitempty"`
	State                BlockStorage_BlockStorageState `protobuf:"varint,5,opt,name=state,proto3,enum=n0stack.infra.v1alpha.BlockStorage_BlockStorageState" json:"state,omitempty"`
	Bytes                uint64                         `protobuf:"varint,32,opt,name=bytes,proto3" json:"bytes,omitempty"`
	IsCd                 bool                           `protobuf:"varint,33,opt,name=is_cd,json=isCd,proto3" json:"is_cd,omitempty"`
	DownloadUrl          string                         `protobuf:"bytes,36,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	InUse                bool                           `protobuf:"varint,34,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	InUseReason          string                         `protobuf:"bytes,35,opt,name=in_use_reason,json=inUseReason,proto3" json:"in_use_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BlockStorage) Reset()         { *m = BlockStorage{} }
func (m *BlockStorage) String() string { return proto.CompactTextString(m) }
func (*BlockStorage) ProtoMessage()    {}
func (*BlockStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{0}
}

func (m *BlockStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockStorage.Unmarshal(m, b)
}
func (m *BlockStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockStorage.Marshal(b, m, deterministic)
}
func (m *BlockStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockStorage.Merge(m, src)
}
func (m *BlockStorage) XXX_Size() int {
	return xxx_messageInfo_BlockStorage.Size(m)
}
func (m *BlockStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockStorage.DiscardUnknown(m)
}

var xxx_messageInfo_BlockStorage proto.InternalMessageInfo

func (m *BlockStorage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BlockStorage) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *BlockStorage) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *BlockStorage) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *BlockStorage) GetOperation() *protobuf.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *BlockStorage) GetState() BlockStorage_BlockStorageState {
	if m != nil {
		return m.State
	}
	return BlockStorage_BLOCK_STORAGE_UNSPECIFIED
}

func (m *BlockStorage) GetBytes() uint64 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *BlockStorage) GetIsCd() bool {
	if m != nil {
		return m.IsCd
	}
	return false
}

func (m *BlockStorage) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

func (m *BlockStorage) GetInUse() bool {
	if m != nil {
		return m.InUse
	}
	return false
}

func (m *BlockStorage) GetInUseReason() string {
	if m != nil {
		return m.InUseReason
	}
	return ""
}

type CreateBlockStorageRequest struct {
	BlockStorage         *BlockStorage `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateBlockStorageRequest) Reset()         { *m = CreateBlockStorageRequest{} }
func (m *CreateBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBlockStorageRequest) ProtoMessage()    {}
func (*CreateBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{1}
}

func (m *CreateBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBlockStorageRequest.Unmarshal(m, b)
}
func (m *CreateBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *CreateBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBlockStorageRequest.Merge(m, src)
}
func (m *CreateBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBlockStorageRequest.Size(m)
}
func (m *CreateBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBlockStorageRequest proto.InternalMessageInfo

func (m *CreateBlockStorageRequest) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

type FetchBlockStorageRequest struct {
	BlockStorage         *BlockStorage `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	SourceUrl            string        `protobuf:"bytes,2,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FetchBlockStorageRequest) Reset()         { *m = FetchBlockStorageRequest{} }
func (m *FetchBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*FetchBlockStorageRequest) ProtoMessage()    {}
func (*FetchBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{2}
}

func (m *FetchBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBlockStorageRequest.Unmarshal(m, b)
}
func (m *FetchBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *FetchBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBlockStorageRequest.Merge(m, src)
}
func (m *FetchBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_FetchBlockStorageRequest.Size(m)
}
func (m *FetchBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBlockStorageRequest proto.InternalMessageInfo

func (m *FetchBlockStorageRequest) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

func (m *FetchBlockStorageRequest) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

type CopyBlockStorageRequest struct {
	BlockStorage           *BlockStorage `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	SourceBlockStorageName string        `protobuf:"bytes,2,opt,name=source_block_storage_name,json=sourceBlockStorageName,proto3" json:"source_block_storage_name,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}      `json:"-"`
	XXX_unrecognized       []byte        `json:"-"`
	XXX_sizecache          int32         `json:"-"`
}

func (m *CopyBlockStorageRequest) Reset()         { *m = CopyBlockStorageRequest{} }
func (m *CopyBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*CopyBlockStorageRequest) ProtoMessage()    {}
func (*CopyBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{3}
}

func (m *CopyBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyBlockStorageRequest.Unmarshal(m, b)
}
func (m *CopyBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *CopyBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyBlockStorageRequest.Merge(m, src)
}
func (m *CopyBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_CopyBlockStorageRequest.Size(m)
}
func (m *CopyBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CopyBlockStorageRequest proto.InternalMessageInfo

func (m *CopyBlockStorageRequest) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

func (m *CopyBlockStorageRequest) GetSourceBlockStorageName() string {
	if m != nil {
		return m.SourceBlockStorageName
	}
	return ""
}

type UploadBlockStorageRequest struct {
	BlockStorage         *BlockStorage `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UploadBlockStorageRequest) Reset()         { *m = UploadBlockStorageRequest{} }
func (m *UploadBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*UploadBlockStorageRequest) ProtoMessage()    {}
func (*UploadBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{4}
}

func (m *UploadBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadBlockStorageRequest.Unmarshal(m, b)
}
func (m *UploadBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *UploadBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadBlockStorageRequest.Merge(m, src)
}
func (m *UploadBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_UploadBlockStorageRequest.Size(m)
}
func (m *UploadBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadBlockStorageRequest proto.InternalMessageInfo

func (m *UploadBlockStorageRequest) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

type UploadBlockStorageResponse struct {
	BlockStorage         *BlockStorage `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	UploadUrl            string        `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UploadBlockStorageResponse) Reset()         { *m = UploadBlockStorageResponse{} }
func (m *UploadBlockStorageResponse) String() string { return proto.CompactTextString(m) }
func (*UploadBlockStorageResponse) ProtoMessage()    {}
func (*UploadBlockStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{5}
}

func (m *UploadBlockStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadBlockStorageResponse.Unmarshal(m, b)
}
func (m *UploadBlockStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadBlockStorageResponse.Marshal(b, m, deterministic)
}
func (m *UploadBlockStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadBlockStorageResponse.Merge(m, src)
}
func (m *UploadBlockStorageResponse) XXX_Size() int {
	return xxx_messageInfo_UploadBlockStorageResponse.Size(m)
}
func (m *UploadBlockStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadBlockStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadBlockStorageResponse proto.InternalMessageInfo

func (m *UploadBlockStorageResponse) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

func (m *UploadBlockStorageResponse) GetUploadUrl() string {
	if m != nil {
		return m.UploadUrl
	}
	return ""
}

type ListBlockStoragesRequest struct {
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBlockStoragesRequest) Reset()         { *m = ListBlockStoragesRequest{} }
func (m *ListBlockStoragesRequest) String() string { return proto.CompactTextString(m) }
func (*ListBlockStoragesRequest) ProtoMessage()    {}
func (*ListBlockStoragesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{6}
}

func (m *ListBlockStoragesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBlockStoragesRequest.Unmarshal(m, b)
}
func (m *ListBlockStoragesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBlockStoragesRequest.Marshal(b, m, deterministic)
}
func (m *ListBlockStoragesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBlockStoragesRequest.Merge(m, src)
}
func (m *ListBlockStoragesRequest) XXX_Size() int {
	return xxx_messageInfo_ListBlockStoragesRequest.Size(m)
}
func (m *ListBlockStoragesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBlockStoragesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBlockStoragesRequest proto.InternalMessageInfo

func (m *ListBlockStoragesRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type ListBlockStoragesResponse struct {
	BlockStorages        []*BlockStorage `protobuf:"bytes,1,rep,name=block_storages,json=blockStorages,proto3" json:"block_storages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListBlockStoragesResponse) Reset()         { *m = ListBlockStoragesResponse{} }
func (m *ListBlockStoragesResponse) String() string { return proto.CompactTextString(m) }
func (*ListBlockStoragesResponse) ProtoMessage()    {}
func (*ListBlockStoragesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{7}
}

func (m *ListBlockStoragesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBlockStoragesResponse.Unmarshal(m, b)
}
func (m *ListBlockStoragesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBlockStoragesResponse.Marshal(b, m, deterministic)
}
func (m *ListBlockStoragesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBlockStoragesResponse.Merge(m, src)
}
func (m *ListBlockStoragesResponse) XXX_Size() int {
	return xxx_messageInfo_ListBlockStoragesResponse.Size(m)
}
func (m *ListBlockStoragesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBlockStoragesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBlockStoragesResponse proto.InternalMessageInfo

func (m *ListBlockStoragesResponse) GetBlockStorages() []*BlockStorage {
	if m != nil {
		return m.BlockStorages
	}
	return nil
}

type GetBlockStorageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockStorageRequest) Reset()         { *m = GetBlockStorageRequest{} }
func (m *GetBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockStorageRequest) ProtoMessage()    {}
func (*GetBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{8}
}

func (m *GetBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockStorageRequest.Unmarshal(m, b)
}
func (m *GetBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockStorageRequest.Merge(m, src)
}
func (m *GetBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockStorageRequest.Size(m)
}
func (m *GetBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockStorageRequest proto.InternalMessageInfo

func (m *GetBlockStorageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetBlockStorageRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type UpdateBlockStorageRequest struct {
	BlockStorage         *BlockStorage         `protobuf:"bytes,1,opt,name=block_storage,json=blockStorage,proto3" json:"block_storage,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateBlockStorageRequest) Reset()         { *m = UpdateBlockStorageRequest{} }
func (m *UpdateBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBlockStorageRequest) ProtoMessage()    {}
func (*UpdateBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{9}
}

func (m *UpdateBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBlockStorageRequest.Unmarshal(m, b)
}
func (m *UpdateBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBlockStorageRequest.Merge(m, src)
}
func (m *UpdateBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBlockStorageRequest.Size(m)
}
func (m *UpdateBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBlockStorageRequest proto.InternalMessageInfo

func (m *UpdateBlockStorageRequest) GetBlockStorage() *BlockStorage {
	if m != nil {
		return m.BlockStorage
	}
	return nil
}

func (m *UpdateBlockStorageRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteBlockStorageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBlockStorageRequest) Reset()         { *m = DeleteBlockStorageRequest{} }
func (m *DeleteBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBlockStorageRequest) ProtoMessage()    {}
func (*DeleteBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{10}
}

func (m *DeleteBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBlockStorageRequest.Unmarshal(m, b)
}
func (m *DeleteBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBlockStorageRequest.Merge(m, src)
}
func (m *DeleteBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBlockStorageRequest.Size(m)
}
func (m *DeleteBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBlockStorageRequest proto.InternalMessageInfo

func (m *DeleteBlockStorageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteBlockStorageRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type CancelBlockStorageOperationRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelBlockStorageOperationRequest) Reset()         { *m = CancelBlockStorageOperationRequest{} }
func (m *CancelBlockStorageOperationRequest) String() string { return proto.CompactTextString(m) }
func (*CancelBlockStorageOperationRequest) ProtoMessage()    {}
func (*CancelBlockStorageOperationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{11}
}

func (m *CancelBlockStorageOperationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelBlockStorageOperationRequest.Unmarshal(m, b)
}
func (m *CancelBlockStorageOperationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelBlockStorageOperationRequest.Marshal(b, m, deterministic)
}
func (m *CancelBlockStorageOperationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelBlockStorageOperationRequest.Merge(m, src)
}
func (m *CancelBlockStorageOperationRequest) XXX_Size() int {
	return xxx_messageInfo_CancelBlockStorageOperationRequest.Size(m)
}
func (m *CancelBlockStorageOperationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelBlockStorageOperationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelBlockStorageOperationRequest proto.InternalMessageInfo

func (m *CancelBlockStorageOperationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CancelBlockStorageOperationRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type UseBlockStorageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	InUseReason          string   `protobuf:"bytes,3,opt,name=in_use_reason,json=inUseReason,proto3" json:"in_use_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseBlockStorageRequest) Reset()         { *m = UseBlockStorageRequest{} }
func (m *UseBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*UseBlockStorageRequest) ProtoMessage()    {}
func (*UseBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{12}
}

func (m *UseBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseBlockStorageRequest.Unmarshal(m, b)
}
func (m *UseBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *UseBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseBlockStorageRequest.Merge(m, src)
}
func (m *UseBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_UseBlockStorageRequest.Size(m)
}
func (m *UseBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UseBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UseBlockStorageRequest proto.InternalMessageInfo

func (m *UseBlockStorageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UseBlockStorageRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *UseBlockStorageRequest) GetInUseReason() string {
	if m != nil {
		return m.InUseReason
	}
	return ""
}

type ReleaseBlockStorageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseBlockStorageRequest) Reset()         { *m = ReleaseBlockStorageRequest{} }
func (m *ReleaseBlockStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseBlockStorageRequest) ProtoMessage()    {}
func (*ReleaseBlockStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8719961c4eca3924, []int{13}
}

func (m *ReleaseBlockStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseBlockStorageRequest.Unmarshal(m, b)
}
func (m *ReleaseBlockStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseBlockStorageRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseBlockStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseBlockStorageRequest.Merge(m, src)
}
func (m *ReleaseBlockStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseBlockStorageRequest.Size(m)
}
func (m *ReleaseBlockStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseBlockStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseBlockStorageRequest proto.InternalMessageInfo

func (m *ReleaseBlockStorageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReleaseBlockStorageRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func init() {
	proto.RegisterEnum("n0stack.infra.v1alpha.BlockStorage_BlockStorageState", BlockStorage_BlockStorageState_name, BlockStorage_BlockStorageState_value)
	proto.RegisterType((*BlockStorage)(nil), "n0stack.infra.v1alpha.BlockStorage")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.BlockStorage.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.infra.v1alpha.BlockStorage.LabelsEntry")
	proto.RegisterType((*CreateBlockStorageRequest)(nil), "n0stack.infra.v1alpha.CreateBlockStorageRequest")
	proto.RegisterType((*FetchBlockStorageRequest)(nil), "n0stack.infra.v1alpha.FetchBlockStorageRequest")
	proto.RegisterType((*CopyBlockStorageRequest)(nil), "n0stack.infra.v1alpha.CopyBlockStorageRequest")
	proto.RegisterType((*UploadBlockStorageRequest)(nil), "n0stack.infra.v1alpha.UploadBlockStorageRequest")
	proto.RegisterType((*UploadBlockStorageResponse)(nil), "n0stack.infra.v1alpha.UploadBlockStorageResponse")
	proto.RegisterType((*ListBlockStoragesRequest)(nil), "n0stack.infra.v1alpha.ListBlockStoragesRequest")
	proto.RegisterType((*ListBlockStoragesResponse)(nil), "n0stack.infra.v1alpha.ListBlockStoragesResponse")
	proto.RegisterType((*GetBlockStorageRequest)(nil), "n0stack.infra.v1alpha.GetBlockStorageRequest")
	proto.RegisterType((*UpdateBlockStorageRequest)(nil), "n0stack.infra.v1alpha.UpdateBlockStorageRequest")
	proto.RegisterType((*DeleteBlockStorageRequest)(nil), "n0stack.infra.v1alpha.DeleteBlockStorageRequest")
	proto.RegisterType((*CancelBlockStorageOperationRequest)(nil), "n0stack.infra.v1alpha.CancelBlockStorageOperationRequest")
	proto.RegisterType((*UseBlockStorageRequest)(nil), "n0stack.infra.v1alpha.UseBlockStorageRequest")
	proto.RegisterType((*ReleaseBlockStorageRequest)(nil), "n0stack.infra.v1alpha.ReleaseBlockStorageRequest")
}

func init() {
	proto.RegisterFile("n0stack/infra/v1alpha/block_storage.proto", fileDescriptor_8719961c4eca3924)
}

var fileDescriptor_8719961c4eca3924 = []byte{
	// 1246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x73, 0xdb, 0x44,
	0x14, 0xef, 0xe6, 0xab, 0xcd, 0x73, 0xd2, 0x3a, 0x5b, 0x1a, 0x14, 0xb7, 0x9d, 0x71, 0xd5, 0x1e,
	0xdc, 0x0e, 0xb1, 0x5a, 0x13, 0x98, 0xc6, 0x01, 0x66, 0x1c, 0xc7, 0x49, 0xdc, 0x3a, 0x1f, 0x23,
	0xc7, 0x65, 0xe8, 0xc5, 0xac, 0xe5, 0x8d, 0xa3, 0x44, 0xd1, 0x0a, 0xad, 0x9c, 0x4e, 0xa6, 0xd3,
	0x19, 0x06, 0x86, 0x0b, 0x47, 0xe0, 0xcc, 0x01, 0x6e, 0x9c, 0xb9, 0xc2, 0x70, 0xe2, 0xc4, 0x8d,
	0x23, 0x57, 0xfe, 0x10, 0x66, 0x57, 0x72, 0x62, 0x5b, 0x56, 0xaa, 0x7c, 0x71, 0x8a, 0xde, 0xea,
	0xbd, 0xb7, 0xbf, 0xdf, 0xbe, 0xa7, 0xf7, 0xdb, 0x18, 0x1e, 0xda, 0x8f, 0xb9, 0x47, 0x8c, 0x3d,
	0xcd, 0xb4, 0xb7, 0x5d, 0xa2, 0x1d, 0x3c, 0x21, 0x96, 0xb3, 0x43, 0xb4, 0x86, 0xc5, 0x8c, 0xbd,
	0x3a, 0xf7, 0x98, 0x4b, 0x5a, 0x34, 0xeb, 0xb8, 0xcc, 0x63, 0xf8, 0x56, 0xe0, 0x9a, 0x95, 0xae,
	0xd9, 0xc0, 0x35, 0x75, 0xa7, 0xc5, 0x58, 0xcb, 0xa2, 0x1a, 0x71, 0x4c, 0x8d, 0xd8, 0x36, 0xf3,
	0x88, 0x67, 0x32, 0x9b, 0xfb, 0x41, 0xa9, 0xdb, 0xc1, 0x5b, 0x69, 0x35, 0xda, 0xdb, 0x1a, 0xdd,
	0x77, 0xbc, 0xc3, 0xe0, 0x65, 0xba, 0xff, 0xe5, 0xb6, 0x49, 0xad, 0x66, 0x7d, 0x9f, 0xf0, 0xbd,
	0xc0, 0xe3, 0x3d, 0xf9, 0xc7, 0x98, 0x6d, 0x51, 0x7b, 0x96, 0xbf, 0x22, 0xad, 0x16, 0x75, 0x35,
	0xe6, 0xc8, 0x0d, 0x06, 0x6c, 0x96, 0xee, 0x90, 0x39, 0x4a, 0xc8, 0x1c, 0xea, 0x4a, 0x17, 0xdf,
	0x43, 0xfd, 0x72, 0x0c, 0x26, 0x16, 0x05, 0xb7, 0xaa, 0x4f, 0x0d, 0x63, 0x18, 0xb1, 0xc9, 0x3e,
	0x55, 0x50, 0x1a, 0x65, 0xc6, 0x75, 0xf9, 0x8c, 0x15, 0xb8, 0xea, 0xb8, 0x6c, 0x97, 0x1a, 0x9e,
	0x32, 0x24, 0x97, 0x3b, 0x26, 0x7e, 0x01, 0x89, 0xae, 0x5d, 0x95, 0xe1, 0xf4, 0x70, 0x26, 0x91,
	0x9b, 0xcb, 0x0e, 0x3c, 0x98, 0x6c, 0xf7, 0x3e, 0xd9, 0xc2, 0x71, 0x58, 0xc9, 0xf6, 0xdc, 0x43,
	0xbd, 0x3b, 0x11, 0x5e, 0x81, 0x31, 0x8b, 0x34, 0xa8, 0xc5, 0x95, 0x11, 0x99, 0x52, 0x8b, 0x93,
	0xb2, 0x22, 0x23, 0xfc, 0x6c, 0x41, 0x38, 0x9e, 0x87, 0xf1, 0x23, 0xca, 0xca, 0x58, 0x1a, 0x65,
	0x12, 0xb9, 0xdb, 0x47, 0xb9, 0x3a, 0xa7, 0x92, 0xdd, 0xe8, 0xb8, 0xe8, 0xc7, 0xde, 0xf8, 0x39,
	0x8c, 0x72, 0x8f, 0x78, 0x54, 0x19, 0x4d, 0xa3, 0xcc, 0xf5, 0xdc, 0x07, 0x71, 0x20, 0x74, 0x1b,
	0x55, 0x11, 0xac, 0xfb, 0x39, 0xf0, 0x3b, 0x30, 0xda, 0x38, 0xf4, 0x28, 0x57, 0xd2, 0x69, 0x94,
	0x19, 0xd1, 0x7d, 0x03, 0xdf, 0x84, 0x51, 0x93, 0xd7, 0x8d, 0xa6, 0x72, 0x2f, 0x8d, 0x32, 0xd7,
	0xf4, 0x11, 0x93, 0x17, 0x9b, 0xf8, 0x1e, 0x4c, 0x34, 0xd9, 0x2b, 0xdb, 0x62, 0xa4, 0x59, 0x6f,
	0xbb, 0x96, 0xf2, 0x40, 0x1e, 0x79, 0xa2, 0xb3, 0x56, 0x73, 0x2d, 0x7c, 0x0b, 0xc6, 0x4c, 0xbb,
	0xde, 0xe6, 0x54, 0x51, 0x65, 0xe0, 0xa8, 0x69, 0xd7, 0x38, 0xc5, 0x2a, 0x4c, 0xfa, 0xcb, 0x75,
	0x97, 0x12, 0xce, 0x6c, 0xe5, 0xbe, 0x1f, 0x2a, 0xdf, 0xea, 0x72, 0x29, 0xf5, 0x09, 0x24, 0xfb,
	0x8f, 0x1e, 0x27, 0x61, 0x78, 0x8f, 0x1e, 0x06, 0x25, 0x17, 0x8f, 0x02, 0xee, 0x01, 0xb1, 0xda,
	0x34, 0xa8, 0xb7, 0x6f, 0xe4, 0x87, 0x9e, 0xa2, 0xd4, 0x3c, 0x24, 0xba, 0xce, 0xf9, 0x34, 0xa1,
	0xea, 0x0f, 0x08, 0xa6, 0x42, 0x07, 0x84, 0xef, 0xc2, 0xcc, 0x62, 0x65, 0xa3, 0xf8, 0xbc, 0x5e,
	0xdd, 0xda, 0xd0, 0x0b, 0x2b, 0xa5, 0x7a, 0x6d, 0xbd, 0xba, 0x59, 0x2a, 0x96, 0x97, 0xcb, 0xa5,
	0xa5, 0xe4, 0x15, 0x3c, 0x09, 0xe3, 0x85, 0x17, 0x85, 0x72, 0xa5, 0xb0, 0x58, 0x29, 0x25, 0x11,
	0x4e, 0xc0, 0xd5, 0xa5, 0x52, 0xa5, 0xb4, 0x55, 0x5a, 0x4a, 0x0e, 0xe1, 0x09, 0xb8, 0x56, 0xd4,
	0x4b, 0x85, 0xad, 0xf2, 0xfa, 0x4a, 0x32, 0x29, 0x2c, 0xf9, 0x4a, 0x58, 0x53, 0xc2, 0x5a, 0x2e,
	0x6d, 0x15, 0x57, 0x85, 0x95, 0x16, 0x61, 0xc5, 0xca, 0xc6, 0xba, 0x30, 0xee, 0x89, 0x94, 0xb5,
	0xcd, 0xca, 0x46, 0x61, 0x49, 0x98, 0xaa, 0x4a, 0x61, 0xa6, 0xe8, 0x52, 0xe2, 0xd1, 0x6e, 0x6c,
	0x3a, 0xfd, 0xa2, 0x4d, 0xb9, 0x87, 0x57, 0x61, 0xb2, 0xe7, 0xd3, 0x97, 0x4c, 0x13, 0xb9, 0xfb,
	0x31, 0x9a, 0x41, 0x9f, 0x68, 0x74, 0x59, 0xea, 0xd7, 0x08, 0x94, 0x65, 0xea, 0x19, 0x3b, 0x97,
	0xba, 0x0d, 0xbe, 0x0b, 0xc0, 0x59, 0xdb, 0x35, 0xa8, 0xec, 0x1d, 0xbf, 0x06, 0xe3, 0xfe, 0x4a,
	0xcd, 0xb5, 0xd4, 0x1f, 0x11, 0xbc, 0x5b, 0x64, 0xce, 0xe1, 0xe5, 0x82, 0x98, 0x87, 0x99, 0x00,
	0x44, 0x4f, 0xc2, 0xba, 0x9c, 0x2c, 0x3e, 0xa6, 0x69, 0xdf, 0xa1, 0x3b, 0xc9, 0x3a, 0xd9, 0xa7,
	0xa2, 0x1a, 0x35, 0x47, 0xf4, 0xf9, 0xe5, 0x56, 0xe3, 0x1b, 0x04, 0xa9, 0x41, 0xfb, 0x70, 0x87,
	0xd9, 0x9c, 0x5e, 0x6c, 0x3d, 0xda, 0xce, 0xd1, 0xb7, 0x1c, 0xd4, 0xc3, 0x5f, 0x11, 0xf5, 0x98,
	0x03, 0xa5, 0x62, 0x72, 0xaf, 0x3b, 0x01, 0xef, 0xb0, 0x8d, 0x1c, 0xbb, 0x6a, 0x0b, 0x66, 0x06,
	0x44, 0x05, 0xd8, 0x9f, 0xc1, 0xf5, 0x1e, 0xec, 0x5c, 0x41, 0x72, 0x86, 0xc6, 0x02, 0x3f, 0xd9,
	0x0d, 0x9e, 0xab, 0xcb, 0x30, 0xbd, 0x42, 0xbd, 0x41, 0xa5, 0x38, 0x95, 0x4e, 0xa8, 0x3f, 0x21,
	0x51, 0xd6, 0xe6, 0x65, 0x7f, 0x64, 0x78, 0x01, 0x12, 0x6d, 0xb9, 0x8d, 0xd4, 0x4c, 0x89, 0x22,
	0x91, 0x4b, 0x65, 0x7d, 0x59, 0x3d, 0x9e, 0xf7, 0xcb, 0x42, 0x56, 0xd7, 0x08, 0xdf, 0xd3, 0xc1,
	0x77, 0x17, 0xcf, 0x6a, 0x19, 0x66, 0x96, 0xa8, 0x45, 0x07, 0x63, 0x3c, 0x1d, 0x5f, 0x1d, 0xd4,
	0x22, 0xb1, 0x0d, 0x6a, 0x75, 0xa7, 0x3a, 0x56, 0x99, 0x33, 0xe5, 0xdc, 0x85, 0xe9, 0x1a, 0x3f,
	0x3f, 0xb6, 0xb0, 0x4a, 0x0c, 0x87, 0x54, 0x42, 0x7d, 0x06, 0x29, 0x9d, 0x5a, 0x94, 0x5c, 0xc0,
	0x7e, 0xb9, 0x3f, 0x92, 0x70, 0xb3, 0x67, 0xec, 0x53, 0xf7, 0xc0, 0x34, 0x28, 0xfe, 0x13, 0x01,
	0x0e, 0x0f, 0x5e, 0xfc, 0x38, 0xa2, 0xea, 0x91, 0x33, 0x3a, 0x15, 0xa7, 0x4f, 0xd4, 0xcf, 0xbe,
	0xfa, 0xfb, 0xdf, 0xef, 0x87, 0xaa, 0xea, 0xa2, 0xbc, 0x97, 0xf5, 0x5e, 0xee, 0x02, 0xa4, 0x5c,
	0x7b, 0x1d, 0xba, 0xe6, 0x89, 0xf5, 0x37, 0xbd, 0xb7, 0x3f, 0x9e, 0xef, 0xed, 0x56, 0xfc, 0x1b,
	0x82, 0xa9, 0xa2, 0xc5, 0xec, 0x5e, 0x1e, 0xd9, 0x28, 0x1e, 0x83, 0xa7, 0x6f, 0x3c, 0x16, 0x55,
	0xc9, 0x62, 0x4d, 0x5d, 0xbd, 0x00, 0x16, 0x86, 0x80, 0x9c, 0x47, 0x8f, 0xf0, 0xef, 0x08, 0xa6,
	0x42, 0xca, 0x84, 0xa3, 0xae, 0x5c, 0x51, 0x1a, 0xf6, 0xff, 0x13, 0xd8, 0x16, 0x48, 0x04, 0x81,
	0x7f, 0x10, 0xe0, 0xf0, 0x30, 0x8f, 0xec, 0xa4, 0x48, 0x7d, 0x49, 0x3d, 0x39, 0x45, 0x84, 0x3f,
	0x6d, 0xd5, 0xcf, 0x25, 0xa1, 0x97, 0x6a, 0xf9, 0x02, 0x08, 0xf9, 0xb2, 0xd0, 0xdf, 0x5e, 0xbf,
	0x22, 0x98, 0x0a, 0x4d, 0xfb, 0xc8, 0xf2, 0x44, 0xa9, 0x49, 0xea, 0x71, 0xfc, 0x80, 0x80, 0xda,
	0x47, 0x92, 0xda, 0x87, 0x78, 0xee, 0x44, 0x6a, 0x11, 0x64, 0xf0, 0x2f, 0x08, 0x6e, 0xf4, 0x69,
	0x07, 0x9e, 0x8d, 0xc0, 0x30, 0x58, 0x63, 0xe2, 0x75, 0x54, 0x51, 0xa2, 0xfc, 0x18, 0x2f, 0x9c,
	0x05, 0xa5, 0xf6, 0x5a, 0x0c, 0xaf, 0x37, 0x41, 0x07, 0x35, 0xe3, 0xce, 0xa2, 0x48, 0x29, 0x8b,
	0x07, 0xd9, 0x96, 0x90, 0x77, 0x72, 0x9f, 0x9e, 0xbf, 0x67, 0xfa, 0xdd, 0x24, 0x9d, 0xfe, 0x0e,
	0xfa, 0x19, 0x01, 0x0e, 0x2b, 0x5b, 0x24, 0xbb, 0x48, 0x11, 0x4c, 0x4d, 0x87, 0x94, 0xb4, 0x24,
	0xfe, 0x7b, 0xed, 0xd4, 0xe0, 0xd1, 0xb9, 0x6a, 0xf0, 0x17, 0x82, 0xdb, 0x27, 0x88, 0x26, 0x9e,
	0x8f, 0x1a, 0xa8, 0x6f, 0x15, 0xda, 0x78, 0x55, 0x59, 0x93, 0x24, 0x56, 0xde, 0xa2, 0x10, 0x27,
	0x93, 0xc8, 0x1b, 0x12, 0x8c, 0x18, 0x4a, 0x0e, 0xdc, 0xd9, 0x74, 0x99, 0xc3, 0x7a, 0x25, 0xf4,
	0x98, 0xce, 0xc3, 0xf0, 0xbf, 0xa1, 0x81, 0xff, 0xd9, 0xe0, 0x5f, 0xc1, 0x2d, 0xb8, 0xd1, 0x77,
	0x41, 0x88, 0xfc, 0xe0, 0x06, 0x5f, 0x24, 0xe2, 0x6e, 0xc4, 0xe0, 0xe6, 0x80, 0xdb, 0x01, 0x8e,
	0x9a, 0x9e, 0xd1, 0x37, 0x89, 0x98, 0x1b, 0x2e, 0x7e, 0x8b, 0xbe, 0x2b, 0x10, 0xfc, 0x14, 0xae,
	0x06, 0xde, 0xea, 0xec, 0xd1, 0x23, 0x56, 0x77, 0x3c, 0xcf, 0xe1, 0x79, 0x4d, 0x6b, 0x99, 0xde,
	0x4e, 0xbb, 0x91, 0x35, 0xd8, 0xbe, 0xd6, 0xf9, 0xd9, 0x23, 0xf8, 0xfb, 0x08, 0x0d, 0xe5, 0x92,
	0xc4, 0x71, 0x2c, 0xd3, 0x90, 0xe7, 0xaa, 0xed, 0x72, 0x66, 0xe7, 0x43, 0x2b, 0x2f, 0x1f, 0x08,
	0xff, 0x2c, 0x31, 0xb4, 0x81, 0xbf, 0x01, 0x2d, 0x38, 0xd2, 0x6c, 0x8c, 0xc9, 0x7a, 0xbd, 0xff,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x06, 0x60, 0x2e, 0x2a, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockStorageServiceClient is the client API for BlockStorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockStorageServiceClient interface {
	CreateBlockStorage(ctx context.Context, in *CreateBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	CloneBlockStorage(ctx context.Context, in *CopyBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	FetchBlockStorage(ctx context.Context, in *FetchBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	UploadBlockStorage(ctx context.Context, in *UploadBlockStorageRequest, opts ...grpc.CallOption) (*UploadBlockStorageResponse, error)
	ListBlockStorages(ctx context.Context, in *ListBlockStoragesRequest, opts ...grpc.CallOption) (*ListBlockStoragesResponse, error)
	GetBlockStorage(ctx context.Context, in *GetBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	UpdateBlockStorage(ctx context.Context, in *UpdateBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	DeleteBlockStorage(ctx context.Context, in *DeleteBlockStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CancelBlockStorageOperation(ctx context.Context, in *CancelBlockStorageOperationRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	ProposeBlockStorageOperation(ctx context.Context, in *protobuf.ProposeOperationRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	UseBlockStorage(ctx context.Context, in *UseBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
	ReleaseBlockStorage(ctx context.Context, in *ReleaseBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error)
}

type blockStorageServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlockStorageServiceClient(cc *grpc.ClientConn) BlockStorageServiceClient {
	return &blockStorageServiceClient{cc}
}

func (c *blockStorageServiceClient) CreateBlockStorage(ctx context.Context, in *CreateBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/CreateBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) CloneBlockStorage(ctx context.Context, in *CopyBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/CloneBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) FetchBlockStorage(ctx context.Context, in *FetchBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/FetchBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) UploadBlockStorage(ctx context.Context, in *UploadBlockStorageRequest, opts ...grpc.CallOption) (*UploadBlockStorageResponse, error) {
	out := new(UploadBlockStorageResponse)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/UploadBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) ListBlockStorages(ctx context.Context, in *ListBlockStoragesRequest, opts ...grpc.CallOption) (*ListBlockStoragesResponse, error) {
	out := new(ListBlockStoragesResponse)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/ListBlockStorages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) GetBlockStorage(ctx context.Context, in *GetBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/GetBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) UpdateBlockStorage(ctx context.Context, in *UpdateBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/UpdateBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) DeleteBlockStorage(ctx context.Context, in *DeleteBlockStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/DeleteBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) CancelBlockStorageOperation(ctx context.Context, in *CancelBlockStorageOperationRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/CancelBlockStorageOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) ProposeBlockStorageOperation(ctx context.Context, in *protobuf.ProposeOperationRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/ProposeBlockStorageOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) UseBlockStorage(ctx context.Context, in *UseBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/UseBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStorageServiceClient) ReleaseBlockStorage(ctx context.Context, in *ReleaseBlockStorageRequest, opts ...grpc.CallOption) (*BlockStorage, error) {
	out := new(BlockStorage)
	err := c.cc.Invoke(ctx, "/n0stack.infra.v1alpha.BlockStorageService/ReleaseBlockStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockStorageServiceServer is the server API for BlockStorageService service.
type BlockStorageServiceServer interface {
	CreateBlockStorage(context.Context, *CreateBlockStorageRequest) (*BlockStorage, error)
	CloneBlockStorage(context.Context, *CopyBlockStorageRequest) (*BlockStorage, error)
	FetchBlockStorage(context.Context, *FetchBlockStorageRequest) (*BlockStorage, error)
	UploadBlockStorage(context.Context, *UploadBlockStorageRequest) (*UploadBlockStorageResponse, error)
	ListBlockStorages(context.Context, *ListBlockStoragesRequest) (*ListBlockStoragesResponse, error)
	GetBlockStorage(context.Context, *GetBlockStorageRequest) (*BlockStorage, error)
	UpdateBlockStorage(context.Context, *UpdateBlockStorageRequest) (*BlockStorage, error)
	DeleteBlockStorage(context.Context, *DeleteBlockStorageRequest) (*empty.Empty, error)
	CancelBlockStorageOperation(context.Context, *CancelBlockStorageOperationRequest) (*BlockStorage, error)
	ProposeBlockStorageOperation(context.Context, *protobuf.ProposeOperationRequest) (*BlockStorage, error)
	UseBlockStorage(context.Context, *UseBlockStorageRequest) (*BlockStorage, error)
	ReleaseBlockStorage(context.Context, *ReleaseBlockStorageRequest) (*BlockStorage, error)
}

// UnimplementedBlockStorageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlockStorageServiceServer struct {
}

func (*UnimplementedBlockStorageServiceServer) CreateBlockStorage(ctx context.Context, req *CreateBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) CloneBlockStorage(ctx context.Context, req *CopyBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloneBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) FetchBlockStorage(ctx context.Context, req *FetchBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) UploadBlockStorage(ctx context.Context, req *UploadBlockStorageRequest) (*UploadBlockStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) ListBlockStorages(ctx context.Context, req *ListBlockStoragesRequest) (*ListBlockStoragesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBlockStorages not implemented")
}
func (*UnimplementedBlockStorageServiceServer) GetBlockStorage(ctx context.Context, req *GetBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) UpdateBlockStorage(ctx context.Context, req *UpdateBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) DeleteBlockStorage(ctx context.Context, req *DeleteBlockStorageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) CancelBlockStorageOperation(ctx context.Context, req *CancelBlockStorageOperationRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelBlockStorageOperation not implemented")
}
func (*UnimplementedBlockStorageServiceServer) ProposeBlockStorageOperation(ctx context.Context, req *protobuf.ProposeOperationRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeBlockStorageOperation not implemented")
}
func (*UnimplementedBlockStorageServiceServer) UseBlockStorage(ctx context.Context, req *UseBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseBlockStorage not implemented")
}
func (*UnimplementedBlockStorageServiceServer) ReleaseBlockStorage(ctx context.Context, req *ReleaseBlockStorageRequest) (*BlockStorage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseBlockStorage not implemented")
}

func RegisterBlockStorageServiceServer(s *grpc.Server, srv BlockStorageServiceServer) {
	s.RegisterService(&_BlockStorageService_serviceDesc, srv)
}

func _BlockStorageService_CreateBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).CreateBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/CreateBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).CreateBlockStorage(ctx, req.(*CreateBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_CloneBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).CloneBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/CloneBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).CloneBlockStorage(ctx, req.(*CopyBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_FetchBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).FetchBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/FetchBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).FetchBlockStorage(ctx, req.(*FetchBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_UploadBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).UploadBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/UploadBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).UploadBlockStorage(ctx, req.(*UploadBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_ListBlockStorages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBlockStoragesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).ListBlockStorages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/ListBlockStorages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).ListBlockStorages(ctx, req.(*ListBlockStoragesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_GetBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).GetBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/GetBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).GetBlockStorage(ctx, req.(*GetBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_UpdateBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).UpdateBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/UpdateBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).UpdateBlockStorage(ctx, req.(*UpdateBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_DeleteBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).DeleteBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/DeleteBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).DeleteBlockStorage(ctx, req.(*DeleteBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_CancelBlockStorageOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelBlockStorageOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).CancelBlockStorageOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/CancelBlockStorageOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).CancelBlockStorageOperation(ctx, req.(*CancelBlockStorageOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_ProposeBlockStorageOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protobuf.ProposeOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).ProposeBlockStorageOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/ProposeBlockStorageOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).ProposeBlockStorageOperation(ctx, req.(*protobuf.ProposeOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_UseBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).UseBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/UseBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).UseBlockStorage(ctx, req.(*UseBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStorageService_ReleaseBlockStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseBlockStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStorageServiceServer).ReleaseBlockStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.infra.v1alpha.BlockStorageService/ReleaseBlockStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStorageServiceServer).ReleaseBlockStorage(ctx, req.(*ReleaseBlockStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockStorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.infra.v1alpha.BlockStorageService",
	HandlerType: (*BlockStorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBlockStorage",
			Handler:    _BlockStorageService_CreateBlockStorage_Handler,
		},
		{
			MethodName: "CloneBlockStorage",
			Handler:    _BlockStorageService_CloneBlockStorage_Handler,
		},
		{
			MethodName: "FetchBlockStorage",
			Handler:    _BlockStorageService_FetchBlockStorage_Handler,
		},
		{
			MethodName: "UploadBlockStorage",
			Handler:    _BlockStorageService_UploadBlockStorage_Handler,
		},
		{
			MethodName: "ListBlockStorages",
			Handler:    _BlockStorageService_ListBlockStorages_Handler,
		},
		{
			MethodName: "GetBlockStorage",
			Handler:    _BlockStorageService_GetBlockStorage_Handler,
		},
		{
			MethodName: "UpdateBlockStorage",
			Handler:    _BlockStorageService_UpdateBlockStorage_Handler,
		},
		{
			MethodName: "DeleteBlockStorage",
			Handler:    _BlockStorageService_DeleteBlockStorage_Handler,
		},
		{
			MethodName: "CancelBlockStorageOperation",
			Handler:    _BlockStorageService_CancelBlockStorageOperation_Handler,
		},
		{
			MethodName: "ProposeBlockStorageOperation",
			Handler:    _BlockStorageService_ProposeBlockStorageOperation_Handler,
		},
		{
			MethodName: "UseBlockStorage",
			Handler:    _BlockStorageService_UseBlockStorage_Handler,
		},
		{
			MethodName: "ReleaseBlockStorage",
			Handler:    _BlockStorageService_ReleaseBlockStorage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "n0stack/infra/v1alpha/block_storage.proto",
}
