// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provisioning/v0/compute.proto

package pprovisioning // import "github.com/n0stack/proto.go/provisioning/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v0 "github.com/n0stack/proto.go/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ComputeStatus_ComputeState int32

const (
	// not scheduled
	ComputeStatus_PENDING ComputeStatus_ComputeState = 0
	// running vm
	ComputeStatus_RUNNING ComputeStatus_ComputeState = 1
	// unknown state because failed to connect for scheduled node after RUNNING.
	ComputeStatus_FAILED ComputeStatus_ComputeState = 2
	// unknown state because failed to connect for scheduled node after RUNNING.
	ComputeStatus_UNKNOWN ComputeStatus_ComputeState = 3
)

var ComputeStatus_ComputeState_name = map[int32]string{
	0: "PENDING",
	1: "RUNNING",
	2: "FAILED",
	3: "UNKNOWN",
}
var ComputeStatus_ComputeState_value = map[string]int32{
	"PENDING": 0,
	"RUNNING": 1,
	"FAILED":  2,
	"UNKNOWN": 3,
}

func (x ComputeStatus_ComputeState) String() string {
	return proto.EnumName(ComputeStatus_ComputeState_name, int32(x))
}
func (ComputeStatus_ComputeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{2, 0}
}

type WatchComputesResponse_ComputeEvents int32

const (
	WatchComputesResponse_APPLY  WatchComputesResponse_ComputeEvents = 0
	WatchComputesResponse_DELETE WatchComputesResponse_ComputeEvents = 1
)

var WatchComputesResponse_ComputeEvents_name = map[int32]string{
	0: "APPLY",
	1: "DELETE",
}
var WatchComputesResponse_ComputeEvents_value = map[string]int32{
	"APPLY":  0,
	"DELETE": 1,
}

func (x WatchComputesResponse_ComputeEvents) String() string {
	return proto.EnumName(WatchComputesResponse_ComputeEvents_name, int32(x))
}
func (WatchComputesResponse_ComputeEvents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{9, 0}
}

type Compute struct {
	Metadata             *v0.Metadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *ComputeSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               *ComputeStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Compute) Reset()         { *m = Compute{} }
func (m *Compute) String() string { return proto.CompactTextString(m) }
func (*Compute) ProtoMessage()    {}
func (*Compute) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{0}
}
func (m *Compute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Compute.Unmarshal(m, b)
}
func (m *Compute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Compute.Marshal(b, m, deterministic)
}
func (dst *Compute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Compute.Merge(dst, src)
}
func (m *Compute) XXX_Size() int {
	return xxx_messageInfo_Compute.Size(m)
}
func (m *Compute) XXX_DiscardUnknown() {
	xxx_messageInfo_Compute.DiscardUnknown(m)
}

var xxx_messageInfo_Compute proto.InternalMessageInfo

func (m *Compute) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Compute) GetSpec() *ComputeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Compute) GetStatus() *ComputeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ComputeSpec struct {
	// CPU
	Vcpus uint32 `protobuf:"varint,1,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	// Memory
	MemoryBytes uint64 `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	// Volume
	VolumeNames          []string           `protobuf:"bytes,3,rep,name=volume_names,json=volumeNames,proto3" json:"volume_names,omitempty"`
	Nics                 []*ComputeSpec_NIC `protobuf:"bytes,4,rep,name=nics,proto3" json:"nics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ComputeSpec) Reset()         { *m = ComputeSpec{} }
func (m *ComputeSpec) String() string { return proto.CompactTextString(m) }
func (*ComputeSpec) ProtoMessage()    {}
func (*ComputeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{1}
}
func (m *ComputeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeSpec.Unmarshal(m, b)
}
func (m *ComputeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeSpec.Marshal(b, m, deterministic)
}
func (dst *ComputeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeSpec.Merge(dst, src)
}
func (m *ComputeSpec) XXX_Size() int {
	return xxx_messageInfo_ComputeSpec.Size(m)
}
func (m *ComputeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeSpec proto.InternalMessageInfo

func (m *ComputeSpec) GetVcpus() uint32 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *ComputeSpec) GetMemoryBytes() uint64 {
	if m != nil {
		return m.MemoryBytes
	}
	return 0
}

func (m *ComputeSpec) GetVolumeNames() []string {
	if m != nil {
		return m.VolumeNames
	}
	return nil
}

func (m *ComputeSpec) GetNics() []*ComputeSpec_NIC {
	if m != nil {
		return m.Nics
	}
	return nil
}

// Network
// エンドポイントを分けたほうがいいと思うが、実装する内容もないし、ユーザーのリクエストが煩雑になるので保留
// ただし、DHCPなどのためやNICの順番が入れ替わったりするときのためにmetadataやidはあったほうが便利だと考えている
type ComputeSpec_NIC struct {
	Metadata             *v0.Metadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *ComputeSpec_NIC_Spec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ComputeSpec_NIC) Reset()         { *m = ComputeSpec_NIC{} }
func (m *ComputeSpec_NIC) String() string { return proto.CompactTextString(m) }
func (*ComputeSpec_NIC) ProtoMessage()    {}
func (*ComputeSpec_NIC) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{1, 0}
}
func (m *ComputeSpec_NIC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeSpec_NIC.Unmarshal(m, b)
}
func (m *ComputeSpec_NIC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeSpec_NIC.Marshal(b, m, deterministic)
}
func (dst *ComputeSpec_NIC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeSpec_NIC.Merge(dst, src)
}
func (m *ComputeSpec_NIC) XXX_Size() int {
	return xxx_messageInfo_ComputeSpec_NIC.Size(m)
}
func (m *ComputeSpec_NIC) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeSpec_NIC.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeSpec_NIC proto.InternalMessageInfo

func (m *ComputeSpec_NIC) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ComputeSpec_NIC) GetSpec() *ComputeSpec_NIC_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type ComputeSpec_NIC_Spec struct {
	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	// 重複するかは確認しない
	// かわりに空を許可して、DHCPで自動割り当てを可能にする
	// TODO: 割り当てられたIPをどうやって確認するか
	Ipaddrs              []string `protobuf:"bytes,2,rep,name=ipaddrs,proto3" json:"ipaddrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeSpec_NIC_Spec) Reset()         { *m = ComputeSpec_NIC_Spec{} }
func (m *ComputeSpec_NIC_Spec) String() string { return proto.CompactTextString(m) }
func (*ComputeSpec_NIC_Spec) ProtoMessage()    {}
func (*ComputeSpec_NIC_Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{1, 0, 0}
}
func (m *ComputeSpec_NIC_Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeSpec_NIC_Spec.Unmarshal(m, b)
}
func (m *ComputeSpec_NIC_Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeSpec_NIC_Spec.Marshal(b, m, deterministic)
}
func (dst *ComputeSpec_NIC_Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeSpec_NIC_Spec.Merge(dst, src)
}
func (m *ComputeSpec_NIC_Spec) XXX_Size() int {
	return xxx_messageInfo_ComputeSpec_NIC_Spec.Size(m)
}
func (m *ComputeSpec_NIC_Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeSpec_NIC_Spec.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeSpec_NIC_Spec proto.InternalMessageInfo

func (m *ComputeSpec_NIC_Spec) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *ComputeSpec_NIC_Spec) GetIpaddrs() []string {
	if m != nil {
		return m.Ipaddrs
	}
	return nil
}

type ComputeStatus struct {
	State                ComputeStatus_ComputeState `protobuf:"varint,1,opt,name=state,proto3,enum=n0stack.provisioning.ComputeStatus_ComputeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ComputeStatus) Reset()         { *m = ComputeStatus{} }
func (m *ComputeStatus) String() string { return proto.CompactTextString(m) }
func (*ComputeStatus) ProtoMessage()    {}
func (*ComputeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{2}
}
func (m *ComputeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeStatus.Unmarshal(m, b)
}
func (m *ComputeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeStatus.Marshal(b, m, deterministic)
}
func (dst *ComputeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeStatus.Merge(dst, src)
}
func (m *ComputeStatus) XXX_Size() int {
	return xxx_messageInfo_ComputeStatus.Size(m)
}
func (m *ComputeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeStatus proto.InternalMessageInfo

func (m *ComputeStatus) GetState() ComputeStatus_ComputeState {
	if m != nil {
		return m.State
	}
	return ComputeStatus_PENDING
}

type ListComputesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListComputesRequest) Reset()         { *m = ListComputesRequest{} }
func (m *ListComputesRequest) String() string { return proto.CompactTextString(m) }
func (*ListComputesRequest) ProtoMessage()    {}
func (*ListComputesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{3}
}
func (m *ListComputesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListComputesRequest.Unmarshal(m, b)
}
func (m *ListComputesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListComputesRequest.Marshal(b, m, deterministic)
}
func (dst *ListComputesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListComputesRequest.Merge(dst, src)
}
func (m *ListComputesRequest) XXX_Size() int {
	return xxx_messageInfo_ListComputesRequest.Size(m)
}
func (m *ListComputesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListComputesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListComputesRequest proto.InternalMessageInfo

type ListComputesResponse struct {
	Computes             []*Compute `protobuf:"bytes,1,rep,name=computes,proto3" json:"computes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListComputesResponse) Reset()         { *m = ListComputesResponse{} }
func (m *ListComputesResponse) String() string { return proto.CompactTextString(m) }
func (*ListComputesResponse) ProtoMessage()    {}
func (*ListComputesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{4}
}
func (m *ListComputesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListComputesResponse.Unmarshal(m, b)
}
func (m *ListComputesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListComputesResponse.Marshal(b, m, deterministic)
}
func (dst *ListComputesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListComputesResponse.Merge(dst, src)
}
func (m *ListComputesResponse) XXX_Size() int {
	return xxx_messageInfo_ListComputesResponse.Size(m)
}
func (m *ListComputesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListComputesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListComputesResponse proto.InternalMessageInfo

func (m *ListComputesResponse) GetComputes() []*Compute {
	if m != nil {
		return m.Computes
	}
	return nil
}

type GetComputeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetComputeRequest) Reset()         { *m = GetComputeRequest{} }
func (m *GetComputeRequest) String() string { return proto.CompactTextString(m) }
func (*GetComputeRequest) ProtoMessage()    {}
func (*GetComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{5}
}
func (m *GetComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetComputeRequest.Unmarshal(m, b)
}
func (m *GetComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetComputeRequest.Marshal(b, m, deterministic)
}
func (dst *GetComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetComputeRequest.Merge(dst, src)
}
func (m *GetComputeRequest) XXX_Size() int {
	return xxx_messageInfo_GetComputeRequest.Size(m)
}
func (m *GetComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetComputeRequest proto.InternalMessageInfo

func (m *GetComputeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplyComputeRequest struct {
	Metadata             *v0.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *ComputeSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ApplyComputeRequest) Reset()         { *m = ApplyComputeRequest{} }
func (m *ApplyComputeRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyComputeRequest) ProtoMessage()    {}
func (*ApplyComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{6}
}
func (m *ApplyComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyComputeRequest.Unmarshal(m, b)
}
func (m *ApplyComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyComputeRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyComputeRequest.Merge(dst, src)
}
func (m *ApplyComputeRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyComputeRequest.Size(m)
}
func (m *ApplyComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyComputeRequest proto.InternalMessageInfo

func (m *ApplyComputeRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ApplyComputeRequest) GetSpec() *ComputeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type DeleteComputeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteComputeRequest) Reset()         { *m = DeleteComputeRequest{} }
func (m *DeleteComputeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteComputeRequest) ProtoMessage()    {}
func (*DeleteComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{7}
}
func (m *DeleteComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteComputeRequest.Unmarshal(m, b)
}
func (m *DeleteComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteComputeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteComputeRequest.Merge(dst, src)
}
func (m *DeleteComputeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteComputeRequest.Size(m)
}
func (m *DeleteComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteComputeRequest proto.InternalMessageInfo

func (m *DeleteComputeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WatchComputesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchComputesRequest) Reset()         { *m = WatchComputesRequest{} }
func (m *WatchComputesRequest) String() string { return proto.CompactTextString(m) }
func (*WatchComputesRequest) ProtoMessage()    {}
func (*WatchComputesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{8}
}
func (m *WatchComputesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchComputesRequest.Unmarshal(m, b)
}
func (m *WatchComputesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchComputesRequest.Marshal(b, m, deterministic)
}
func (dst *WatchComputesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchComputesRequest.Merge(dst, src)
}
func (m *WatchComputesRequest) XXX_Size() int {
	return xxx_messageInfo_WatchComputesRequest.Size(m)
}
func (m *WatchComputesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchComputesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchComputesRequest proto.InternalMessageInfo

type WatchComputesResponse struct {
	Event                WatchComputesResponse_ComputeEvents `protobuf:"varint,1,opt,name=event,proto3,enum=n0stack.provisioning.WatchComputesResponse_ComputeEvents" json:"event,omitempty"`
	Compute              *Compute                            `protobuf:"bytes,2,opt,name=compute,proto3" json:"compute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *WatchComputesResponse) Reset()         { *m = WatchComputesResponse{} }
func (m *WatchComputesResponse) String() string { return proto.CompactTextString(m) }
func (*WatchComputesResponse) ProtoMessage()    {}
func (*WatchComputesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_compute_599d9aed8b328c51, []int{9}
}
func (m *WatchComputesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchComputesResponse.Unmarshal(m, b)
}
func (m *WatchComputesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchComputesResponse.Marshal(b, m, deterministic)
}
func (dst *WatchComputesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchComputesResponse.Merge(dst, src)
}
func (m *WatchComputesResponse) XXX_Size() int {
	return xxx_messageInfo_WatchComputesResponse.Size(m)
}
func (m *WatchComputesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchComputesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchComputesResponse proto.InternalMessageInfo

func (m *WatchComputesResponse) GetEvent() WatchComputesResponse_ComputeEvents {
	if m != nil {
		return m.Event
	}
	return WatchComputesResponse_APPLY
}

func (m *WatchComputesResponse) GetCompute() *Compute {
	if m != nil {
		return m.Compute
	}
	return nil
}

func init() {
	proto.RegisterType((*Compute)(nil), "n0stack.provisioning.Compute")
	proto.RegisterType((*ComputeSpec)(nil), "n0stack.provisioning.ComputeSpec")
	proto.RegisterType((*ComputeSpec_NIC)(nil), "n0stack.provisioning.ComputeSpec.NIC")
	proto.RegisterType((*ComputeSpec_NIC_Spec)(nil), "n0stack.provisioning.ComputeSpec.NIC.Spec")
	proto.RegisterType((*ComputeStatus)(nil), "n0stack.provisioning.ComputeStatus")
	proto.RegisterType((*ListComputesRequest)(nil), "n0stack.provisioning.ListComputesRequest")
	proto.RegisterType((*ListComputesResponse)(nil), "n0stack.provisioning.ListComputesResponse")
	proto.RegisterType((*GetComputeRequest)(nil), "n0stack.provisioning.GetComputeRequest")
	proto.RegisterType((*ApplyComputeRequest)(nil), "n0stack.provisioning.ApplyComputeRequest")
	proto.RegisterType((*DeleteComputeRequest)(nil), "n0stack.provisioning.DeleteComputeRequest")
	proto.RegisterType((*WatchComputesRequest)(nil), "n0stack.provisioning.WatchComputesRequest")
	proto.RegisterType((*WatchComputesResponse)(nil), "n0stack.provisioning.WatchComputesResponse")
	proto.RegisterEnum("n0stack.provisioning.ComputeStatus_ComputeState", ComputeStatus_ComputeState_name, ComputeStatus_ComputeState_value)
	proto.RegisterEnum("n0stack.provisioning.WatchComputesResponse_ComputeEvents", WatchComputesResponse_ComputeEvents_name, WatchComputesResponse_ComputeEvents_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComputeServiceClient is the client API for ComputeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputeServiceClient interface {
	ListComputes(ctx context.Context, in *ListComputesRequest, opts ...grpc.CallOption) (*ListComputesResponse, error)
	GetCompute(ctx context.Context, in *GetComputeRequest, opts ...grpc.CallOption) (*Compute, error)
	ApplyCompute(ctx context.Context, in *ApplyComputeRequest, opts ...grpc.CallOption) (*Compute, error)
	DeleteCompute(ctx context.Context, in *DeleteComputeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	WatchCompute(ctx context.Context, in *WatchComputesRequest, opts ...grpc.CallOption) (ComputeService_WatchComputeClient, error)
}

type computeServiceClient struct {
	cc *grpc.ClientConn
}

func NewComputeServiceClient(cc *grpc.ClientConn) ComputeServiceClient {
	return &computeServiceClient{cc}
}

func (c *computeServiceClient) ListComputes(ctx context.Context, in *ListComputesRequest, opts ...grpc.CallOption) (*ListComputesResponse, error) {
	out := new(ListComputesResponse)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.ComputeService/ListComputes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeServiceClient) GetCompute(ctx context.Context, in *GetComputeRequest, opts ...grpc.CallOption) (*Compute, error) {
	out := new(Compute)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.ComputeService/GetCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeServiceClient) ApplyCompute(ctx context.Context, in *ApplyComputeRequest, opts ...grpc.CallOption) (*Compute, error) {
	out := new(Compute)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.ComputeService/ApplyCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeServiceClient) DeleteCompute(ctx context.Context, in *DeleteComputeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.ComputeService/DeleteCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeServiceClient) WatchCompute(ctx context.Context, in *WatchComputesRequest, opts ...grpc.CallOption) (ComputeService_WatchComputeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ComputeService_serviceDesc.Streams[0], "/n0stack.provisioning.ComputeService/WatchCompute", opts...)
	if err != nil {
		return nil, err
	}
	x := &computeServiceWatchComputeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ComputeService_WatchComputeClient interface {
	Recv() (*WatchComputesResponse, error)
	grpc.ClientStream
}

type computeServiceWatchComputeClient struct {
	grpc.ClientStream
}

func (x *computeServiceWatchComputeClient) Recv() (*WatchComputesResponse, error) {
	m := new(WatchComputesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ComputeServiceServer is the server API for ComputeService service.
type ComputeServiceServer interface {
	ListComputes(context.Context, *ListComputesRequest) (*ListComputesResponse, error)
	GetCompute(context.Context, *GetComputeRequest) (*Compute, error)
	ApplyCompute(context.Context, *ApplyComputeRequest) (*Compute, error)
	DeleteCompute(context.Context, *DeleteComputeRequest) (*empty.Empty, error)
	WatchCompute(*WatchComputesRequest, ComputeService_WatchComputeServer) error
}

func RegisterComputeServiceServer(s *grpc.Server, srv ComputeServiceServer) {
	s.RegisterService(&_ComputeService_serviceDesc, srv)
}

func _ComputeService_ListComputes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListComputesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServiceServer).ListComputes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.ComputeService/ListComputes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServiceServer).ListComputes(ctx, req.(*ListComputesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeService_GetCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServiceServer).GetCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.ComputeService/GetCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServiceServer).GetCompute(ctx, req.(*GetComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeService_ApplyCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServiceServer).ApplyCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.ComputeService/ApplyCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServiceServer).ApplyCompute(ctx, req.(*ApplyComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeService_DeleteCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServiceServer).DeleteCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.ComputeService/DeleteCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServiceServer).DeleteCompute(ctx, req.(*DeleteComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeService_WatchCompute_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchComputesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ComputeServiceServer).WatchCompute(m, &computeServiceWatchComputeServer{stream})
}

type ComputeService_WatchComputeServer interface {
	Send(*WatchComputesResponse) error
	grpc.ServerStream
}

type computeServiceWatchComputeServer struct {
	grpc.ServerStream
}

func (x *computeServiceWatchComputeServer) Send(m *WatchComputesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ComputeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.ComputeService",
	HandlerType: (*ComputeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListComputes",
			Handler:    _ComputeService_ListComputes_Handler,
		},
		{
			MethodName: "GetCompute",
			Handler:    _ComputeService_GetCompute_Handler,
		},
		{
			MethodName: "ApplyCompute",
			Handler:    _ComputeService_ApplyCompute_Handler,
		},
		{
			MethodName: "DeleteCompute",
			Handler:    _ComputeService_DeleteCompute_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchCompute",
			Handler:       _ComputeService_WatchCompute_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "provisioning/v0/compute.proto",
}

func init() {
	proto.RegisterFile("provisioning/v0/compute.proto", fileDescriptor_compute_599d9aed8b328c51)
}

var fileDescriptor_compute_599d9aed8b328c51 = []byte{
	// 711 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x55, 0x5d, 0x4e, 0xdb, 0x4c,
	0x14, 0x8d, 0x49, 0x42, 0xe0, 0x3a, 0xa0, 0x30, 0x04, 0x14, 0xf9, 0x13, 0x12, 0xcc, 0xa7, 0x16,
	0x4a, 0x55, 0x3b, 0x4a, 0x55, 0x55, 0x11, 0x52, 0xa5, 0x90, 0x18, 0x14, 0x35, 0x35, 0xd4, 0x2d,
	0x45, 0xe5, 0x05, 0x39, 0x66, 0x1a, 0x2c, 0xe2, 0x9f, 0x66, 0xc6, 0xae, 0xa2, 0xee, 0xa4, 0x6b,
	0xe8, 0x06, 0xba, 0x84, 0xee, 0xa2, 0x5b, 0xe8, 0x0e, 0xaa, 0xf1, 0x0f, 0x38, 0xa9, 0x81, 0xf0,
	0xd2, 0x37, 0xcf, 0x9d, 0x73, 0xce, 0xdc, 0x7b, 0xe6, 0x58, 0x03, 0x1b, 0xde, 0xc8, 0x0d, 0x2c,
	0x6a, 0xb9, 0x8e, 0xe5, 0x0c, 0x94, 0xa0, 0xae, 0x98, 0xae, 0xed, 0xf9, 0x8c, 0xc8, 0xde, 0xc8,
	0x65, 0x2e, 0xaa, 0x3a, 0x75, 0xca, 0x0c, 0xf3, 0x4a, 0x4e, 0xc3, 0xa4, 0xff, 0x06, 0xae, 0x3b,
	0x18, 0x12, 0x25, 0xc4, 0xf4, 0xfd, 0x4f, 0x0a, 0xb1, 0x3d, 0x36, 0x8e, 0x28, 0xd2, 0x4a, 0x50,
	0x57, 0x6c, 0xc2, 0x8c, 0x0b, 0x83, 0x19, 0x51, 0x09, 0x7f, 0x17, 0xa0, 0xd4, 0x8e, 0x74, 0xd1,
	0x33, 0x58, 0x48, 0x76, 0x6b, 0xc2, 0xa6, 0xb0, 0x23, 0x36, 0x56, 0xe4, 0xe4, 0x90, 0x37, 0xf1,
	0x86, 0x7e, 0x0d, 0x41, 0x2f, 0xa0, 0x40, 0x3d, 0x62, 0xd6, 0xe6, 0x42, 0xe8, 0x96, 0x9c, 0xd5,
	0x8f, 0x1c, 0x6b, 0xbf, 0xf3, 0x88, 0xa9, 0x87, 0x70, 0xb4, 0x07, 0xf3, 0x94, 0x19, 0xcc, 0xa7,
	0xb5, 0x7c, 0x48, 0xfc, 0xff, 0x6e, 0x62, 0x08, 0xd5, 0x63, 0x0a, 0xfe, 0x35, 0x07, 0x62, 0x4a,
	0x12, 0x55, 0xa1, 0x18, 0x98, 0x9e, 0x4f, 0xc3, 0x7e, 0x97, 0xf4, 0x68, 0x81, 0xb6, 0xa0, 0x6c,
	0x13, 0xdb, 0x1d, 0x8d, 0xcf, 0xfb, 0x63, 0x46, 0x68, 0xd8, 0x61, 0x41, 0x17, 0xa3, 0xda, 0x3e,
	0x2f, 0x71, 0x48, 0xe0, 0x0e, 0x7d, 0x9b, 0x9c, 0x3b, 0x86, 0x4d, 0x78, 0x2f, 0xf9, 0x9d, 0x45,
	0x5d, 0x8c, 0x6a, 0x1a, 0x2f, 0xa1, 0x26, 0x14, 0x1c, 0xcb, 0xa4, 0xb5, 0xc2, 0x66, 0x7e, 0x47,
	0x6c, 0x3c, 0xba, 0x77, 0x3e, 0x59, 0xeb, 0xb6, 0xf5, 0x90, 0x22, 0xfd, 0x10, 0x20, 0xaf, 0x75,
	0xdb, 0x0f, 0x75, 0xf4, 0xd5, 0x84, 0xa3, 0xbb, 0x33, 0x9d, 0x28, 0xdf, 0x58, 0x2b, 0xb5, 0xa1,
	0x10, 0xba, 0xb2, 0x05, 0x65, 0x87, 0xb0, 0x2f, 0xee, 0xe8, 0x2a, 0x9c, 0x2e, 0x3c, 0x7a, 0x51,
	0x17, 0xe3, 0x1a, 0x9f, 0x0e, 0xd5, 0xa0, 0x64, 0x79, 0xc6, 0xc5, 0xc5, 0x88, 0xbb, 0xc3, 0x47,
	0x4f, 0x96, 0xf8, 0x9b, 0x00, 0x4b, 0x13, 0xe6, 0xa3, 0x03, 0x28, 0x72, 0xfb, 0x23, 0x9d, 0xe5,
	0x46, 0x7d, 0x86, 0x0b, 0x4b, 0xaf, 0x88, 0x1e, 0xd1, 0x71, 0x0b, 0xca, 0xe9, 0x32, 0x12, 0xa1,
	0x74, 0xac, 0x6a, 0x9d, 0xae, 0x76, 0x58, 0xc9, 0xf1, 0x85, 0x7e, 0xa2, 0x69, 0x7c, 0x21, 0x20,
	0x80, 0xf9, 0x83, 0x56, 0xb7, 0xa7, 0x76, 0x2a, 0x73, 0x7c, 0xe3, 0x44, 0x7b, 0xad, 0x1d, 0x9d,
	0x6a, 0x95, 0x3c, 0x5e, 0x83, 0xd5, 0x9e, 0x45, 0x59, 0x2c, 0x43, 0x75, 0xf2, 0xd9, 0x27, 0x94,
	0xe1, 0xb7, 0x50, 0x9d, 0x2c, 0x53, 0xcf, 0x75, 0x28, 0x41, 0x4d, 0x58, 0x88, 0x7f, 0x1a, 0x9e,
	0x10, 0x7e, 0x8d, 0x1b, 0x77, 0x36, 0xaf, 0x5f, 0xc3, 0xf1, 0x36, 0xac, 0x1c, 0x92, 0x44, 0x31,
	0x3e, 0x07, 0x21, 0x28, 0xa4, 0x0c, 0x0d, 0xbf, 0xf1, 0x57, 0x58, 0x6d, 0x79, 0xde, 0x70, 0x3c,
	0x05, 0xfd, 0x27, 0x3f, 0x13, 0xde, 0x85, 0x6a, 0x87, 0x0c, 0x09, 0x23, 0x33, 0x34, 0xba, 0x0e,
	0xd5, 0x53, 0x83, 0x99, 0x97, 0xd3, 0xe6, 0xfd, 0x14, 0x60, 0x6d, 0x6a, 0x23, 0xb6, 0xef, 0x08,
	0x8a, 0x24, 0x20, 0x0e, 0x8b, 0x2f, 0xbe, 0x99, 0xdd, 0x55, 0x26, 0x37, 0xe9, 0x55, 0xe5, 0x7c,
	0xaa, 0x47, 0x3a, 0xe8, 0x25, 0x94, 0x62, 0x83, 0xe3, 0x41, 0xef, 0xb9, 0x8e, 0x04, 0x8d, 0x1f,
	0x5f, 0x67, 0x32, 0x12, 0x44, 0x8b, 0x50, 0x6c, 0x1d, 0x1f, 0xf7, 0x3e, 0x56, 0x72, 0x3c, 0x2c,
	0x1d, 0xb5, 0xa7, 0xbe, 0x57, 0x2b, 0x42, 0xe3, 0x77, 0x1e, 0x96, 0x13, 0x97, 0xc8, 0x28, 0xb0,
	0x4c, 0x82, 0x06, 0x50, 0x4e, 0x67, 0x03, 0x3d, 0xc9, 0x3e, 0x32, 0x23, 0x56, 0xd2, 0xee, 0x2c,
	0xd0, 0x68, 0x5e, 0x9c, 0x43, 0x1f, 0x00, 0x6e, 0x12, 0x83, 0xb6, 0xb3, 0xb9, 0x7f, 0x65, 0x4a,
	0xba, 0xdb, 0x02, 0x9c, 0x43, 0x67, 0x50, 0x4e, 0x07, 0xec, 0xb6, 0x01, 0x32, 0x42, 0x78, 0xbf,
	0xf6, 0x09, 0x2c, 0x4d, 0xe4, 0x07, 0xdd, 0x32, 0x72, 0x56, 0xc8, 0xa4, 0x75, 0x39, 0x7a, 0x6c,
	0xe4, 0xe4, 0xb1, 0x91, 0x55, 0xfe, 0xd8, 0xe0, 0x1c, 0xba, 0x82, 0x72, 0x3a, 0x15, 0xb7, 0xa9,
	0x66, 0xc5, 0x51, 0x7a, 0xfa, 0x80, 0x94, 0xe1, 0x5c, 0x5d, 0xd8, 0xdf, 0x3b, 0x6b, 0x0e, 0x2c,
	0x76, 0xe9, 0xf7, 0x65, 0xd3, 0xb5, 0x95, 0x98, 0x1c, 0x3d, 0x80, 0xf2, 0xc0, 0x55, 0xa6, 0x5e,
	0xd1, 0x3d, 0x2f, 0x5d, 0xe8, 0xcf, 0x87, 0xb8, 0xe7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdf,
	0x4a, 0xd2, 0xf8, 0x6d, 0x07, 0x00, 0x00,
}
