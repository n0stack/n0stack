// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provisioning/v0/node.proto

package pprovisioning // import "github.com/n0stack/proto.go/provisioning/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v0 "github.com/n0stack/proto.go/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeStatus_NodeState int32

const (
	NodeStatus_NotReady NodeStatus_NodeState = 0
	NodeStatus_Ready    NodeStatus_NodeState = 1
)

var NodeStatus_NodeState_name = map[int32]string{
	0: "NotReady",
	1: "Ready",
}
var NodeStatus_NodeState_value = map[string]int32{
	"NotReady": 0,
	"Ready":    1,
}

func (x NodeStatus_NodeState) String() string {
	return proto.EnumName(NodeStatus_NodeState_name, int32(x))
}
func (NodeStatus_NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{2, 0}
}

type Node struct {
	Metadata             *v0.Metadata    `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *NodeSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               *NodeStatus     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Components           []*v0.Component `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetSpec() *NodeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Node) GetStatus() *NodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Node) GetComponents() []*v0.Component {
	if m != nil {
		return m.Components
	}
	return nil
}

type NodeSpec struct {
	Address              string                        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Endpoints            map[uint32]*NodeSpec_Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IpmiAddress          string                        `protobuf:"bytes,3,opt,name=ipmi_address,json=ipmiAddress,proto3" json:"ipmi_address,omitempty"`
	Serial               string                        `protobuf:"bytes,4,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NodeSpec) Reset()         { *m = NodeSpec{} }
func (m *NodeSpec) String() string { return proto.CompactTextString(m) }
func (*NodeSpec) ProtoMessage()    {}
func (*NodeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{1}
}
func (m *NodeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSpec.Unmarshal(m, b)
}
func (m *NodeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSpec.Marshal(b, m, deterministic)
}
func (dst *NodeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSpec.Merge(dst, src)
}
func (m *NodeSpec) XXX_Size() int {
	return xxx_messageInfo_NodeSpec.Size(m)
}
func (m *NodeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSpec proto.InternalMessageInfo

func (m *NodeSpec) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NodeSpec) GetEndpoints() map[uint32]*NodeSpec_Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *NodeSpec) GetIpmiAddress() string {
	if m != nil {
		return m.IpmiAddress
	}
	return ""
}

func (m *NodeSpec) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

// Map of port and service description
type NodeSpec_Endpoint struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeSpec_Endpoint) Reset()         { *m = NodeSpec_Endpoint{} }
func (m *NodeSpec_Endpoint) String() string { return proto.CompactTextString(m) }
func (*NodeSpec_Endpoint) ProtoMessage()    {}
func (*NodeSpec_Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{1, 0}
}
func (m *NodeSpec_Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSpec_Endpoint.Unmarshal(m, b)
}
func (m *NodeSpec_Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSpec_Endpoint.Marshal(b, m, deterministic)
}
func (dst *NodeSpec_Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSpec_Endpoint.Merge(dst, src)
}
func (m *NodeSpec_Endpoint) XXX_Size() int {
	return xxx_messageInfo_NodeSpec_Endpoint.Size(m)
}
func (m *NodeSpec_Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSpec_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSpec_Endpoint proto.InternalMessageInfo

func (m *NodeSpec_Endpoint) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *NodeSpec_Endpoint) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type NodeStatus struct {
	State                NodeStatus_NodeState `protobuf:"varint,1,opt,name=state,proto3,enum=n0stack.node.NodeStatus_NodeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{2}
}
func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (dst *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(dst, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetState() NodeStatus_NodeState {
	if m != nil {
		return m.State
	}
	return NodeStatus_NotReady
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{3}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{4}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetNodeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{5}
}
func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(dst, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplyNodeRequest struct {
	Metadata             *v0.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *NodeSpec    `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ApplyNodeRequest) Reset()         { *m = ApplyNodeRequest{} }
func (m *ApplyNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyNodeRequest) ProtoMessage()    {}
func (*ApplyNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{6}
}
func (m *ApplyNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyNodeRequest.Unmarshal(m, b)
}
func (m *ApplyNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyNodeRequest.Merge(dst, src)
}
func (m *ApplyNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyNodeRequest.Size(m)
}
func (m *ApplyNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyNodeRequest proto.InternalMessageInfo

func (m *ApplyNodeRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ApplyNodeRequest) GetSpec() *NodeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type DeleteNodeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_dc9af804f7c5d741, []int{7}
}
func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(dst, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "n0stack.node.Node")
	proto.RegisterType((*NodeSpec)(nil), "n0stack.node.NodeSpec")
	proto.RegisterMapType((map[uint32]*NodeSpec_Endpoint)(nil), "n0stack.node.NodeSpec.EndpointsEntry")
	proto.RegisterType((*NodeSpec_Endpoint)(nil), "n0stack.node.NodeSpec.Endpoint")
	proto.RegisterType((*NodeStatus)(nil), "n0stack.node.NodeStatus")
	proto.RegisterType((*ListNodesRequest)(nil), "n0stack.node.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "n0stack.node.ListNodesResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "n0stack.node.GetNodeRequest")
	proto.RegisterType((*ApplyNodeRequest)(nil), "n0stack.node.ApplyNodeRequest")
	proto.RegisterType((*DeleteNodeRequest)(nil), "n0stack.node.DeleteNodeRequest")
	proto.RegisterEnum("n0stack.node.NodeStatus_NodeState", NodeStatus_NodeState_name, NodeStatus_NodeState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeServiceClient is the client API for NodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeServiceClient interface {
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	// 指定したIDのNodeオブジェクトをかえす
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error)
	ApplyNode(ctx context.Context, in *ApplyNodeRequest, opts ...grpc.CallOption) (*Node, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := c.cc.Invoke(ctx, "/n0stack.node.NodeService/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/n0stack.node.NodeService/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ApplyNode(ctx context.Context, in *ApplyNodeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/n0stack.node.NodeService/ApplyNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.node.NodeService/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServiceServer is the server API for NodeService service.
type NodeServiceServer interface {
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	// 指定したIDのNodeオブジェクトをかえす
	GetNode(context.Context, *GetNodeRequest) (*Node, error)
	ApplyNode(context.Context, *ApplyNodeRequest) (*Node, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*empty.Empty, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ApplyNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ApplyNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/ApplyNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ApplyNode(ctx, req.(*ApplyNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.node.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNodes",
			Handler:    _NodeService_ListNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _NodeService_GetNode_Handler,
		},
		{
			MethodName: "ApplyNode",
			Handler:    _NodeService_ApplyNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _NodeService_DeleteNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provisioning/v0/node.proto",
}

func init() { proto.RegisterFile("provisioning/v0/node.proto", fileDescriptor_node_dc9af804f7c5d741) }

var fileDescriptor_node_dc9af804f7c5d741 = []byte{
	// 595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xcd, 0xdf, 0xb6, 0x9e, 0xf4, 0x57, 0x25, 0x73, 0xa8, 0x2c, 0xff, 0x10, 0x2d, 0xab, 0x22,
	0x2a, 0x24, 0xec, 0x28, 0x08, 0xa9, 0x50, 0x15, 0xa9, 0x94, 0xaa, 0x17, 0xe8, 0x61, 0xb9, 0x21,
	0x21, 0xe4, 0xc6, 0x43, 0xb0, 0x6a, 0x7b, 0x8d, 0x77, 0x63, 0x29, 0xdf, 0x88, 0xef, 0xc1, 0x81,
	0xaf, 0x85, 0x76, 0xed, 0x75, 0x93, 0xd0, 0xa8, 0x27, 0x6e, 0xbb, 0x33, 0x6f, 0xde, 0x3c, 0xbf,
	0x59, 0x0f, 0x78, 0x79, 0x21, 0xca, 0x58, 0xc6, 0x22, 0x8b, 0xb3, 0x59, 0x50, 0x8e, 0x83, 0x4c,
	0x44, 0xe4, 0xe7, 0x85, 0x50, 0x02, 0x77, 0xb3, 0xb1, 0x54, 0xe1, 0xf4, 0xd6, 0xd7, 0x31, 0xef,
	0xff, 0x99, 0x10, 0xb3, 0x84, 0x02, 0x93, 0xbb, 0x99, 0x7f, 0x0b, 0x28, 0xcd, 0xd5, 0xa2, 0x82,
	0x7a, 0x58, 0x8e, 0x83, 0xa9, 0x48, 0x73, 0x91, 0x51, 0xa6, 0xea, 0xd8, 0xa8, 0x1c, 0x07, 0x29,
	0xa9, 0x30, 0x0a, 0x55, 0x58, 0x85, 0xd8, 0xef, 0x36, 0xf4, 0xae, 0x45, 0x44, 0xf8, 0x02, 0x76,
	0x6c, 0xca, 0x6d, 0x1f, 0xb6, 0x8f, 0x07, 0x93, 0x91, 0x6f, 0xbb, 0x7d, 0xac, 0x13, 0xbc, 0x81,
	0xe0, 0x73, 0xe8, 0xc9, 0x9c, 0xa6, 0x6e, 0xc7, 0x40, 0xf7, 0xfd, 0x65, 0x61, 0xbe, 0x26, 0xfc,
	0x94, 0xd3, 0x94, 0x1b, 0x0c, 0x8e, 0x61, 0x4b, 0xaa, 0x50, 0xcd, 0xa5, 0xdb, 0x35, 0x68, 0xf7,
	0x1e, 0xb4, 0xc9, 0xf3, 0x1a, 0x87, 0x13, 0x80, 0x46, 0xbb, 0x74, 0x7b, 0x87, 0xdd, 0xe3, 0xc1,
	0x04, 0x9b, 0xaa, 0x0b, 0x9b, 0xe2, 0x4b, 0x28, 0xf6, 0xab, 0x03, 0x3b, 0xb6, 0x31, 0xba, 0xb0,
	0x1d, 0x46, 0x51, 0x41, 0x52, 0x9a, 0x8f, 0x71, 0xb8, 0xbd, 0xe2, 0x05, 0x38, 0x94, 0x45, 0xb9,
	0x88, 0x35, 0x73, 0xc7, 0x30, 0x3f, 0xbd, 0x5f, 0xbd, 0x7f, 0x69, 0x71, 0x97, 0x99, 0x2a, 0x16,
	0xfc, 0xae, 0x0e, 0x9f, 0xc0, 0x6e, 0x9c, 0xa7, 0xf1, 0x57, 0xdb, 0xa3, 0x6b, 0x7a, 0x0c, 0x74,
	0xec, 0xbc, 0xee, 0xb3, 0x0f, 0x5b, 0x92, 0x8a, 0x38, 0x4c, 0xdc, 0x9e, 0x49, 0xd6, 0x37, 0xef,
	0x2d, 0xec, 0x58, 0x5e, 0xad, 0x52, 0x52, 0x51, 0xc6, 0x53, 0xb2, 0x2a, 0xeb, 0xab, 0xce, 0x94,
	0x54, 0xe8, 0x47, 0x60, 0x1c, 0x76, 0xb8, 0xbd, 0x7a, 0x5f, 0x60, 0x6f, 0x55, 0x17, 0x0e, 0xa1,
	0x7b, 0x4b, 0x0b, 0xc3, 0xf0, 0x1f, 0xd7, 0x47, 0x7c, 0x05, 0xfd, 0x32, 0x4c, 0xe6, 0x54, 0x4f,
	0xe7, 0xe0, 0x81, 0xef, 0xe3, 0x15, 0xfa, 0x4d, 0xe7, 0xa4, 0xcd, 0x12, 0x80, 0xbb, 0x79, 0xe0,
	0x09, 0xf4, 0xf5, 0x44, 0x2a, 0x79, 0x7b, 0x13, 0xb6, 0x69, 0x70, 0xcd, 0x91, 0x78, 0x55, 0xc0,
	0x8e, 0xc0, 0x69, 0x62, 0xb8, 0xab, 0x27, 0xa3, 0x38, 0x85, 0xd1, 0x62, 0xd8, 0x42, 0x07, 0xfa,
	0xd5, 0xb1, 0xcd, 0x10, 0x86, 0x1f, 0x62, 0xa9, 0x34, 0x52, 0x72, 0xfa, 0x31, 0x27, 0xa9, 0xd8,
	0x19, 0x8c, 0x96, 0x62, 0x32, 0x17, 0x99, 0x24, 0x3c, 0x86, 0xbe, 0x6e, 0xa9, 0xa7, 0xb9, 0xfa,
	0x16, 0x1a, 0x21, 0xbc, 0x02, 0xb0, 0x23, 0xd8, 0xbb, 0x22, 0x53, 0x5d, 0x13, 0x22, 0x42, 0x2f,
	0x0b, 0x53, 0x6b, 0xb1, 0x39, 0xb3, 0x14, 0x86, 0xe7, 0x79, 0x9e, 0x2c, 0x96, 0x71, 0xff, 0xee,
	0x0f, 0x60, 0xcf, 0x60, 0xf4, 0x9e, 0x12, 0x52, 0xf4, 0x80, 0xae, 0xc9, 0xcf, 0x0e, 0x0c, 0x4c,
	0x6d, 0xfd, 0x0e, 0xae, 0xc1, 0x69, 0xcc, 0xc0, 0xc7, 0xab, 0x3d, 0xd6, 0x9d, 0xf3, 0x0e, 0x36,
	0xe6, 0x2b, 0x17, 0x59, 0x0b, 0xcf, 0x60, 0xbb, 0x76, 0x07, 0x1f, 0xad, 0xa2, 0x57, 0x4d, 0xf3,
	0xee, 0x71, 0x98, 0xb5, 0xf0, 0x1c, 0x9c, 0xc6, 0xb6, 0x75, 0x39, 0xeb, 0x7e, 0x6e, 0xa0, 0xb8,
	0x02, 0xb8, 0xb3, 0x02, 0xd7, 0x24, 0xff, 0x65, 0x92, 0xb7, 0xef, 0x57, 0x4b, 0xce, 0xb7, 0x4b,
	0xce, 0xbf, 0xd4, 0x4b, 0x8e, 0xb5, 0xde, 0x9d, 0x7e, 0x7e, 0x3d, 0x8b, 0xd5, 0xf7, 0xf9, 0x8d,
	0x3f, 0x15, 0x69, 0x50, 0xd3, 0x54, 0xbb, 0xd0, 0x9f, 0x89, 0x60, 0x6d, 0x8b, 0x9e, 0xe6, 0xcb,
	0x81, 0x9b, 0x2d, 0x83, 0x7b, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x58, 0x8e, 0x5c, 0x6d,
	0x05, 0x00, 0x00,
}
